Terminals unused in grammar

    AUTO
    BREAK
    CASE
    CONST
    CONTINUE
    DEFAULT
    DOUBLE
    ENUM
    EXTERN
    GOTO
    LONG
    REGISTER
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    UNION
    UNSIGNED
    VOLATILE
    OP_NO


State 0 conflicts: 1 shift/reduce
State 3 conflicts: 5 shift/reduce
State 9 conflicts: 1 shift/reduce, 5 reduce/reduce
State 49 conflicts: 13 shift/reduce
State 68 conflicts: 2 reduce/reduce
State 95 conflicts: 2 reduce/reduce
State 106 conflicts: 5 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return FIN

    2 headers: headers headers
    3        | INCLUDE
    4        | ε

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN else
    6     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA
    7     | WHILE PARENT_A condition PARENT_C INICIO body FIN PUNTO_COMA
    8     | DO INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
    9     | statement PUNTO_COMA
   10     | body body
   11     | PRINTF PARENT_A STRING COMA ID PARENT_C PUNTO_COMA
   12     | PRINTF PARENT_A STRING PARENT_C PUNTO_COMA
   13     | SCANF PARENT_A STRING COMA ID PARENT_C PUNTO_COMA

   14 else: ELSE INICIO body FIN
   15     | ε

   16 datatype: CHAR
   17         | INT
   18         | FLOAT
   19         | VOID

   20 condition: value relational value
   21          | value logic value
   22          | TRUE
   23          | FALSE

   24 statement: datatype ID init
   25          | ID asignators value
   26          | ID asignators expression
   27          | ID relational expression
   28          | ID UNARY
   29          | UNARY ID
   30          | error

   31 init: OP_ASIG value
   32     | OP_ASIG expression
   33     | COMA ID init
   34     | ε

   35 asignators: OP_ASIG
   36           | OP_INCRE_SUM
   37           | OP_INCRE_SUST
   38           | OP_INCRE_DIV
   39           | OP_INCRE_MULT

   40 expression: expression arithmetics expression
   41           | value

   42 arithmetics: OP_SUMA
   43            | OP_SUS
   44            | OP_DIV
   45            | OP_MOD
   46            | OP_MULT

   47 relational: OP_IGUAL
   48           | OP_MAYOR
   49           | OP_MAYOR_IGUAL
   50           | OP_MENOR
   51           | OP_MENOR_IGUAL
   52           | OP_DIST

   53 value: CHARACTER
   54      | FLOAT_NUMBER
   55      | INTEGER
   56      | STRING
   57      | ID

   58 logic: OP_O
   59      | OP_Y

   60 return: RETURN value PUNTO_COMA
   61       | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256) 30
    MAIN (258) 1
    INCLUDE (259) 3
    UNARY (260) 28 29
    RETURN (261) 60
    AUTO (262)
    BREAK (263)
    CASE (264)
    CHAR (265) 16
    CONST (266)
    CONTINUE (267)
    DEFAULT (268)
    DO (269) 8
    DOUBLE (270)
    ELSE (271) 14
    ENUM (272)
    EXTERN (273)
    FLOAT (274) 18
    FOR (275) 6
    GOTO (276)
    IF (277) 5
    INT (278) 17
    LONG (279)
    REGISTER (280)
    PRINTF (281) 11 12
    SCANF (282) 13
    SHORT (283)
    SIGNED (284)
    SIZEOF (285)
    STATIC (286)
    STRUCT (287)
    SWITCH (288)
    UNION (289)
    UNSIGNED (290)
    VOID (291) 19
    VOLATILE (292)
    WHILE (293) 7 8
    OP_MULT (294) 46
    OP_SUMA (295) 42
    OP_SUS (296) 43
    OP_DIV (297) 44
    OP_MOD (298) 45
    OP_ASIG (299) 31 32 35
    PUNTO_COMA (300) 6 7 8 9 11 12 13 60
    PARENT_A (301) 1 5 6 7 8 11 12 13
    PARENT_C (302) 1 5 6 7 8 11 12 13
    COMA (303) 11 13 33
    INICIO (304) 1 5 6 7 8 14
    FIN (305) 1 5 6 7 8 14
    OP_O (306) 58
    OP_NO (307)
    OP_MAYOR_IGUAL (308) 49
    OP_MAYOR (309) 48
    OP_MENOR_IGUAL (310) 51
    OP_MENOR (311) 50
    OP_DIST (312) 52
    OP_Y (313) 59
    OP_IGUAL (314) 47
    CHARACTER (315) 53
    STRING (316) 11 12 13 56
    FLOAT_NUMBER (317) 54
    INTEGER (318) 55
    ID (319) 11 13 24 25 26 27 28 29 33 57
    TRUE (320) 22
    FALSE (321) 23
    OP_INCRE_SUM (322) 36
    OP_INCRE_MULT (323) 39
    OP_INCRE_DIV (324) 38
    OP_INCRE_SUST (325) 37


Nonterminals, with rules where they appear

    $accept (71)
        on left: 0
    program (72)
        on left: 1
        on right: 0
    headers (73)
        on left: 2 3 4
        on right: 1 2
    body (74)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 1 5 6 7 8 10 14
    else (75)
        on left: 14 15
        on right: 5
    datatype (76)
        on left: 16 17 18 19
        on right: 1 24
    condition (77)
        on left: 20 21 22 23
        on right: 5 6 7 8
    statement (78)
        on left: 24 25 26 27 28 29 30
        on right: 6 9
    init (79)
        on left: 31 32 33 34
        on right: 24 33
    asignators (80)
        on left: 35 36 37 38 39
        on right: 25 26
    expression (81)
        on left: 40 41
        on right: 26 27 32 40
    arithmetics (82)
        on left: 42 43 44 45 46
        on right: 40
    relational (83)
        on left: 47 48 49 50 51 52
        on right: 20 27
    value (84)
        on left: 53 54 55 56 57
        on right: 20 21 25 31 41 60
    logic (85)
        on left: 58 59
        on right: 21
    return (86)
        on left: 60 61
        on right: 1


State 0

    0 $accept: • program $end

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 4 (headers)]
    $default  reduce using rule 4 (headers)

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE •

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: headers • datatype MAIN PARENT_A PARENT_C INICIO body return FIN
    2 headers: headers • headers

    INCLUDE  shift, and go to state 1
    CHAR     shift, and go to state 5
    FLOAT    shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8

    INCLUDE  [reduce using rule 4 (headers)]
    CHAR     [reduce using rule 4 (headers)]
    FLOAT    [reduce using rule 4 (headers)]
    INT      [reduce using rule 4 (headers)]
    VOID     [reduce using rule 4 (headers)]

    headers   go to state 9
    datatype  go to state 10


State 4

    0 $accept: program $end •

    $default  accept


State 5

   16 datatype: CHAR •

    $default  reduce using rule 16 (datatype)


State 6

   18 datatype: FLOAT •

    $default  reduce using rule 18 (datatype)


State 7

   17 datatype: INT •

    $default  reduce using rule 17 (datatype)


State 8

   19 datatype: VOID •

    $default  reduce using rule 19 (datatype)


State 9

    2 headers: headers • headers
    2        | headers headers •

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    INCLUDE   [reduce using rule 4 (headers)]
    CHAR      reduce using rule 2 (headers)
    CHAR      [reduce using rule 4 (headers)]
    FLOAT     reduce using rule 2 (headers)
    FLOAT     [reduce using rule 4 (headers)]
    INT       reduce using rule 2 (headers)
    INT       [reduce using rule 4 (headers)]
    VOID      reduce using rule 2 (headers)
    VOID      [reduce using rule 4 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 9


State 10

    1 program: headers datatype • MAIN PARENT_A PARENT_C INICIO body return FIN

    MAIN  shift, and go to state 11


State 11

    1 program: headers datatype MAIN • PARENT_A PARENT_C INICIO body return FIN

    PARENT_A  shift, and go to state 12


State 12

    1 program: headers datatype MAIN PARENT_A • PARENT_C INICIO body return FIN

    PARENT_C  shift, and go to state 13


State 13

    1 program: headers datatype MAIN PARENT_A PARENT_C • INICIO body return FIN

    INICIO  shift, and go to state 14


State 14

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO • body return FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 24
    datatype   go to state 25
    statement  go to state 26


State 15

   30 statement: error •

    $default  reduce using rule 30 (statement)


State 16

   29 statement: UNARY • ID

    ID  shift, and go to state 27


State 17

    8 body: DO • INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA

    INICIO  shift, and go to state 28


State 18

    6 body: FOR • PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    PARENT_A  shift, and go to state 29


State 19

    5 body: IF • PARENT_A condition PARENT_C INICIO body FIN else

    PARENT_A  shift, and go to state 30


State 20

   11 body: PRINTF • PARENT_A STRING COMA ID PARENT_C PUNTO_COMA
   12     | PRINTF • PARENT_A STRING PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 31


State 21

   13 body: SCANF • PARENT_A STRING COMA ID PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 32


State 22

    7 body: WHILE • PARENT_A condition PARENT_C INICIO body FIN PUNTO_COMA

    PARENT_A  shift, and go to state 33


State 23

   25 statement: ID • asignators value
   26          | ID • asignators expression
   27          | ID • relational expression
   28          | ID • UNARY

    UNARY           shift, and go to state 34
    OP_ASIG         shift, and go to state 35
    OP_MAYOR_IGUAL  shift, and go to state 36
    OP_MAYOR        shift, and go to state 37
    OP_MENOR_IGUAL  shift, and go to state 38
    OP_MENOR        shift, and go to state 39
    OP_DIST         shift, and go to state 40
    OP_IGUAL        shift, and go to state 41
    OP_INCRE_SUM    shift, and go to state 42
    OP_INCRE_MULT   shift, and go to state 43
    OP_INCRE_DIV    shift, and go to state 44
    OP_INCRE_SUST   shift, and go to state 45

    asignators  go to state 46
    relational  go to state 47


State 24

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body • return FIN
   10 body: body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    RETURN  shift, and go to state 48
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    FIN  reduce using rule 61 (return)

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26
    return     go to state 50


State 25

   24 statement: datatype • ID init

    ID  shift, and go to state 51


State 26

    9 body: statement • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 52


State 27

   29 statement: UNARY ID •

    $default  reduce using rule 29 (statement)


State 28

    8 body: DO INICIO • body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 53
    datatype   go to state 25
    statement  go to state 26


State 29

    6 body: FOR PARENT_A • statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    error  shift, and go to state 15
    UNARY  shift, and go to state 16
    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    ID     shift, and go to state 23

    datatype   go to state 25
    statement  go to state 54


State 30

    5 body: IF PARENT_A • condition PARENT_C INICIO body FIN else

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59
    TRUE          shift, and go to state 60
    FALSE         shift, and go to state 61

    condition  go to state 62
    value      go to state 63


State 31

   11 body: PRINTF PARENT_A • STRING COMA ID PARENT_C PUNTO_COMA
   12     | PRINTF PARENT_A • STRING PARENT_C PUNTO_COMA

    STRING  shift, and go to state 64


State 32

   13 body: SCANF PARENT_A • STRING COMA ID PARENT_C PUNTO_COMA

    STRING  shift, and go to state 65


State 33

    7 body: WHILE PARENT_A • condition PARENT_C INICIO body FIN PUNTO_COMA

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59
    TRUE          shift, and go to state 60
    FALSE         shift, and go to state 61

    condition  go to state 66
    value      go to state 63


State 34

   28 statement: ID UNARY •

    $default  reduce using rule 28 (statement)


State 35

   35 asignators: OP_ASIG •

    $default  reduce using rule 35 (asignators)


State 36

   49 relational: OP_MAYOR_IGUAL •

    $default  reduce using rule 49 (relational)


State 37

   48 relational: OP_MAYOR •

    $default  reduce using rule 48 (relational)


State 38

   51 relational: OP_MENOR_IGUAL •

    $default  reduce using rule 51 (relational)


State 39

   50 relational: OP_MENOR •

    $default  reduce using rule 50 (relational)


State 40

   52 relational: OP_DIST •

    $default  reduce using rule 52 (relational)


State 41

   47 relational: OP_IGUAL •

    $default  reduce using rule 47 (relational)


State 42

   36 asignators: OP_INCRE_SUM •

    $default  reduce using rule 36 (asignators)


State 43

   39 asignators: OP_INCRE_MULT •

    $default  reduce using rule 39 (asignators)


State 44

   38 asignators: OP_INCRE_DIV •

    $default  reduce using rule 38 (asignators)


State 45

   37 asignators: OP_INCRE_SUST •

    $default  reduce using rule 37 (asignators)


State 46

   25 statement: ID asignators • value
   26          | ID asignators • expression

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59

    expression  go to state 67
    value       go to state 68


State 47

   27 statement: ID relational • expression

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59

    expression  go to state 69
    value       go to state 70


State 48

   60 return: RETURN • value PUNTO_COMA

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59

    value  go to state 71


State 49

   10 body: body • body
   10     | body body •

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    error   [reduce using rule 10 (body)]
    UNARY   [reduce using rule 10 (body)]
    RETURN  reduce using rule 10 (body)
    CHAR    [reduce using rule 10 (body)]
    DO      [reduce using rule 10 (body)]
    FLOAT   [reduce using rule 10 (body)]
    FOR     [reduce using rule 10 (body)]
    IF      [reduce using rule 10 (body)]
    INT     [reduce using rule 10 (body)]
    PRINTF  [reduce using rule 10 (body)]
    SCANF   [reduce using rule 10 (body)]
    VOID    [reduce using rule 10 (body)]
    WHILE   [reduce using rule 10 (body)]
    FIN     reduce using rule 10 (body)
    ID      [reduce using rule 10 (body)]

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 50

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return • FIN

    FIN  shift, and go to state 72


State 51

   24 statement: datatype ID • init

    OP_ASIG  shift, and go to state 73
    COMA     shift, and go to state 74

    $default  reduce using rule 34 (init)

    init  go to state 75


State 52

    9 body: statement PUNTO_COMA •

    $default  reduce using rule 9 (body)


State 53

    8 body: DO INICIO body • FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
   10     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 76
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 54

    6 body: FOR PARENT_A statement • PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    PUNTO_COMA  shift, and go to state 77


State 55

   53 value: CHARACTER •

    $default  reduce using rule 53 (value)


State 56

   56 value: STRING •

    $default  reduce using rule 56 (value)


State 57

   54 value: FLOAT_NUMBER •

    $default  reduce using rule 54 (value)


State 58

   55 value: INTEGER •

    $default  reduce using rule 55 (value)


State 59

   57 value: ID •

    $default  reduce using rule 57 (value)


State 60

   22 condition: TRUE •

    $default  reduce using rule 22 (condition)


State 61

   23 condition: FALSE •

    $default  reduce using rule 23 (condition)


State 62

    5 body: IF PARENT_A condition • PARENT_C INICIO body FIN else

    PARENT_C  shift, and go to state 78


State 63

   20 condition: value • relational value
   21          | value • logic value

    OP_O            shift, and go to state 79
    OP_MAYOR_IGUAL  shift, and go to state 36
    OP_MAYOR        shift, and go to state 37
    OP_MENOR_IGUAL  shift, and go to state 38
    OP_MENOR        shift, and go to state 39
    OP_DIST         shift, and go to state 40
    OP_Y            shift, and go to state 80
    OP_IGUAL        shift, and go to state 41

    relational  go to state 81
    logic       go to state 82


State 64

   11 body: PRINTF PARENT_A STRING • COMA ID PARENT_C PUNTO_COMA
   12     | PRINTF PARENT_A STRING • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 83
    COMA      shift, and go to state 84


State 65

   13 body: SCANF PARENT_A STRING • COMA ID PARENT_C PUNTO_COMA

    COMA  shift, and go to state 85


State 66

    7 body: WHILE PARENT_A condition • PARENT_C INICIO body FIN PUNTO_COMA

    PARENT_C  shift, and go to state 86


State 67

   26 statement: ID asignators expression •
   40 expression: expression • arithmetics expression

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    $default  reduce using rule 26 (statement)

    arithmetics  go to state 92


State 68

   25 statement: ID asignators value •
   41 expression: value •

    PUNTO_COMA  reduce using rule 25 (statement)
    PUNTO_COMA  [reduce using rule 41 (expression)]
    PARENT_C    reduce using rule 25 (statement)
    PARENT_C    [reduce using rule 41 (expression)]
    $default    reduce using rule 41 (expression)


State 69

   27 statement: ID relational expression •
   40 expression: expression • arithmetics expression

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    $default  reduce using rule 27 (statement)

    arithmetics  go to state 92


State 70

   41 expression: value •

    $default  reduce using rule 41 (expression)


State 71

   60 return: RETURN value • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 93


State 72

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return FIN •

    $default  reduce using rule 1 (program)


State 73

   31 init: OP_ASIG • value
   32     | OP_ASIG • expression

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59

    expression  go to state 94
    value       go to state 95


State 74

   33 init: COMA • ID init

    ID  shift, and go to state 96


State 75

   24 statement: datatype ID init •

    $default  reduce using rule 24 (statement)


State 76

    8 body: DO INICIO body FIN • WHILE PARENT_A condition PARENT_C PUNTO_COMA

    WHILE  shift, and go to state 97


State 77

    6 body: FOR PARENT_A statement PUNTO_COMA • condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59
    TRUE          shift, and go to state 60
    FALSE         shift, and go to state 61

    condition  go to state 98
    value      go to state 63


State 78

    5 body: IF PARENT_A condition PARENT_C • INICIO body FIN else

    INICIO  shift, and go to state 99


State 79

   58 logic: OP_O •

    $default  reduce using rule 58 (logic)


State 80

   59 logic: OP_Y •

    $default  reduce using rule 59 (logic)


State 81

   20 condition: value relational • value

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59

    value  go to state 100


State 82

   21 condition: value logic • value

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59

    value  go to state 101


State 83

   12 body: PRINTF PARENT_A STRING PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 102


State 84

   11 body: PRINTF PARENT_A STRING COMA • ID PARENT_C PUNTO_COMA

    ID  shift, and go to state 103


State 85

   13 body: SCANF PARENT_A STRING COMA • ID PARENT_C PUNTO_COMA

    ID  shift, and go to state 104


State 86

    7 body: WHILE PARENT_A condition PARENT_C • INICIO body FIN PUNTO_COMA

    INICIO  shift, and go to state 105


State 87

   46 arithmetics: OP_MULT •

    $default  reduce using rule 46 (arithmetics)


State 88

   42 arithmetics: OP_SUMA •

    $default  reduce using rule 42 (arithmetics)


State 89

   43 arithmetics: OP_SUS •

    $default  reduce using rule 43 (arithmetics)


State 90

   44 arithmetics: OP_DIV •

    $default  reduce using rule 44 (arithmetics)


State 91

   45 arithmetics: OP_MOD •

    $default  reduce using rule 45 (arithmetics)


State 92

   40 expression: expression arithmetics • expression

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59

    expression  go to state 106
    value       go to state 70


State 93

   60 return: RETURN value PUNTO_COMA •

    $default  reduce using rule 60 (return)


State 94

   32 init: OP_ASIG expression •
   40 expression: expression • arithmetics expression

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    $default  reduce using rule 32 (init)

    arithmetics  go to state 92


State 95

   31 init: OP_ASIG value •
   41 expression: value •

    PUNTO_COMA  reduce using rule 31 (init)
    PUNTO_COMA  [reduce using rule 41 (expression)]
    PARENT_C    reduce using rule 31 (init)
    PARENT_C    [reduce using rule 41 (expression)]
    $default    reduce using rule 41 (expression)


State 96

   33 init: COMA ID • init

    OP_ASIG  shift, and go to state 73
    COMA     shift, and go to state 74

    $default  reduce using rule 34 (init)

    init  go to state 107


State 97

    8 body: DO INICIO body FIN WHILE • PARENT_A condition PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 108


State 98

    6 body: FOR PARENT_A statement PUNTO_COMA condition • PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    PUNTO_COMA  shift, and go to state 109


State 99

    5 body: IF PARENT_A condition PARENT_C INICIO • body FIN else

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 110
    datatype   go to state 25
    statement  go to state 26


State 100

   20 condition: value relational value •

    $default  reduce using rule 20 (condition)


State 101

   21 condition: value logic value •

    $default  reduce using rule 21 (condition)


State 102

   12 body: PRINTF PARENT_A STRING PARENT_C PUNTO_COMA •

    $default  reduce using rule 12 (body)


State 103

   11 body: PRINTF PARENT_A STRING COMA ID • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 111


State 104

   13 body: SCANF PARENT_A STRING COMA ID • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 112


State 105

    7 body: WHILE PARENT_A condition PARENT_C INICIO • body FIN PUNTO_COMA

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 113
    datatype   go to state 25
    statement  go to state 26


State 106

   40 expression: expression • arithmetics expression
   40           | expression arithmetics expression •

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    OP_MULT   [reduce using rule 40 (expression)]
    OP_SUMA   [reduce using rule 40 (expression)]
    OP_SUS    [reduce using rule 40 (expression)]
    OP_DIV    [reduce using rule 40 (expression)]
    OP_MOD    [reduce using rule 40 (expression)]
    $default  reduce using rule 40 (expression)

    arithmetics  go to state 92


State 107

   33 init: COMA ID init •

    $default  reduce using rule 33 (init)


State 108

    8 body: DO INICIO body FIN WHILE PARENT_A • condition PARENT_C PUNTO_COMA

    CHARACTER     shift, and go to state 55
    STRING        shift, and go to state 56
    FLOAT_NUMBER  shift, and go to state 57
    INTEGER       shift, and go to state 58
    ID            shift, and go to state 59
    TRUE          shift, and go to state 60
    FALSE         shift, and go to state 61

    condition  go to state 114
    value      go to state 63


State 109

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA • statement PARENT_C INICIO body FIN PUNTO_COMA

    error  shift, and go to state 15
    UNARY  shift, and go to state 16
    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    ID     shift, and go to state 23

    datatype   go to state 25
    statement  go to state 115


State 110

    5 body: IF PARENT_A condition PARENT_C INICIO body • FIN else
   10     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 116
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 111

   11 body: PRINTF PARENT_A STRING COMA ID PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 117


State 112

   13 body: SCANF PARENT_A STRING COMA ID PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 118


State 113

    7 body: WHILE PARENT_A condition PARENT_C INICIO body • FIN PUNTO_COMA
   10     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 119
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 114

    8 body: DO INICIO body FIN WHILE PARENT_A condition • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 120


State 115

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement • PARENT_C INICIO body FIN PUNTO_COMA

    PARENT_C  shift, and go to state 121


State 116

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN • else

    ELSE  shift, and go to state 122

    $default  reduce using rule 15 (else)

    else  go to state 123


State 117

   11 body: PRINTF PARENT_A STRING COMA ID PARENT_C PUNTO_COMA •

    $default  reduce using rule 11 (body)


State 118

   13 body: SCANF PARENT_A STRING COMA ID PARENT_C PUNTO_COMA •

    $default  reduce using rule 13 (body)


State 119

    7 body: WHILE PARENT_A condition PARENT_C INICIO body FIN • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 124


State 120

    8 body: DO INICIO body FIN WHILE PARENT_A condition PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 125


State 121

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C • INICIO body FIN PUNTO_COMA

    INICIO  shift, and go to state 126


State 122

   14 else: ELSE • INICIO body FIN

    INICIO  shift, and go to state 127


State 123

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN else •

    $default  reduce using rule 5 (body)


State 124

    7 body: WHILE PARENT_A condition PARENT_C INICIO body FIN PUNTO_COMA •

    $default  reduce using rule 7 (body)


State 125

    8 body: DO INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA •

    $default  reduce using rule 8 (body)


State 126

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO • body FIN PUNTO_COMA

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 128
    datatype   go to state 25
    statement  go to state 26


State 127

   14 else: ELSE INICIO • body FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 129
    datatype   go to state 25
    statement  go to state 26


State 128

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body • FIN PUNTO_COMA
   10     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 130
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 129

   10 body: body • body
   14 else: ELSE INICIO body • FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 131
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 130

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 132


State 131

   14 else: ELSE INICIO body FIN •

    $default  reduce using rule 14 (else)


State 132

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA •

    $default  reduce using rule 6 (body)
