Terminals unused in grammar

    AUTO
    BREAK
    CASE
    CONST
    CONTINUE
    DEFAULT
    DOUBLE
    ENUM
    EXTERN
    GOTO
    LONG
    REGISTER
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    UNION
    UNSIGNED
    VOLATILE
    OP_MOD
    OP_O
    OP_NO
    OP_Y
    OP-ASIG


State 0 conflicts: 1 shift/reduce
State 3 conflicts: 5 shift/reduce
State 9 conflicts: 1 shift/reduce, 5 reduce/reduce
State 49 conflicts: 13 shift/reduce
State 104 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return FIN

    2 headers: headers headers
    3        | INCLUDE
    4        | ε

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN else
    6     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA
    7     | WHILE PARENT_A condition PARENT_C INICIO body FIN
    8     | DO INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
    9     | statement PUNTO_COMA
   10     | body body
   11     | PRINTF PARENT_A STRING PARENT_C PUNTO_COMA
   12     | PRINTF PARENT_A STRING COMA ID PARENT_C PUNTO_COMA
   13     | SCANF PARENT_A STRING COMA '&' ID PARENT_C PUNTO_COMA

   14 else: ELSE INICIO body FIN
   15     | ε

   16 datatype: CHAR
   17         | INT
   18         | FLOAT
   19         | VOID

   20 condition: value relational value
   21          | TRUE
   22          | FALSE

   23 statement: datatype ID init PUNTO_COMA
   24          | ID asignators value PUNTO_COMA
   25          | ID relational expression PUNTO_COMA
   26          | ID UNARY PUNTO_COMA
   27          | UNARY ID PUNTO_COMA
   28          | error

   29 init: OP_ASIG value
   30     | COMA ID init
   31     | ε

   32 asignators: OP_ASIG
   33           | OP_INCRE_SUM
   34           | OP_INCRE_SUST
   35           | OP_INCRE_DIV
   36           | OP_INCRE_MULT

   37 expression: expression arithmetics expression
   38           | value

   39 arithmetics: OP_SUMA
   40            | OP_SUS
   41            | OP_DIV
   42            | OP_MULT

   43 relational: OP_IGUAL
   44           | OP_MAYOR
   45           | OP_MAYOR_IGUAL
   46           | OP_MENOR
   47           | OP_MENOR_IGUAL
   48           | OP_DIST

   49 value: CHARACTER
   50      | FLOAT_NUMBER
   51      | INTEGER_NUMBER
   52      | STRING
   53      | ID

   54 return: RETURN value PUNTO_COMA
   55       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 13
    error (256) 28
    MAIN (258) 1
    INCLUDE (259) 3
    UNARY (260) 26 27
    RETURN (261) 54
    AUTO (262)
    BREAK (263)
    CASE (264)
    CHAR (265) 16
    CONST (266)
    CONTINUE (267)
    DEFAULT (268)
    DO (269) 8
    DOUBLE (270)
    ELSE (271) 14
    ENUM (272)
    EXTERN (273)
    FLOAT (274) 18
    FOR (275) 6
    GOTO (276)
    IF (277) 5
    INT (278) 17
    LONG (279)
    REGISTER (280)
    PRINTF (281) 11 12
    SCANF (282) 13
    SHORT (283)
    SIGNED (284)
    SIZEOF (285)
    STATIC (286)
    STRUCT (287)
    SWITCH (288)
    UNION (289)
    UNSIGNED (290)
    VOID (291) 19
    VOLATILE (292)
    WHILE (293) 7 8
    OP_MULT (294) 42
    OP_SUMA (295) 39
    OP_SUS (296) 40
    OP_DIV (297) 41
    OP_MOD (298)
    OP_ASIG (299) 29 32
    PUNTO_COMA (300) 6 8 9 11 12 13 23 24 25 26 27 54
    PARENT_A (301) 1 5 6 7 8 11 12 13
    PARENT_C (302) 1 5 6 7 8 11 12 13
    COMA (303) 12 13 30
    INICIO (304) 1 5 6 7 8 14
    FIN (305) 1 5 6 7 8 14
    OP_O (306)
    OP_NO (307)
    OP_MAYOR_IGUAL (308) 45
    OP_MAYOR (309) 44
    OP_MENOR_IGUAL (310) 47
    OP_MENOR (311) 46
    OP_DIST (312) 48
    OP_Y (313)
    OP_IGUAL (314) 43
    CHARACTER (315) 49
    STRING (316) 11 12 13 52
    FLOAT_NUMBER (317) 50
    INTEGER_NUMBER (318) 51
    ID (319) 12 13 23 24 25 26 27 30 53
    TRUE (320) 21
    FALSE (321) 22
    OP_INCRE_SUM (322) 33
    OP_INCRE_MULT (323) 36
    OP_INCRE_DIV (324) 35
    OP_INCRE_SUST (325) 34
    OP-ASIG (326)


Nonterminals, with rules where they appear

    $accept (73)
        on left: 0
    program (74)
        on left: 1
        on right: 0
    headers (75)
        on left: 2 3 4
        on right: 1 2
    body (76)
        on left: 5 6 7 8 9 10 11 12 13
        on right: 1 5 6 7 8 10 14
    else (77)
        on left: 14 15
        on right: 5
    datatype (78)
        on left: 16 17 18 19
        on right: 1 23
    condition (79)
        on left: 20 21 22
        on right: 5 6 7 8
    statement (80)
        on left: 23 24 25 26 27 28
        on right: 6 9
    init (81)
        on left: 29 30 31
        on right: 23 30
    asignators (82)
        on left: 32 33 34 35 36
        on right: 24
    expression (83)
        on left: 37 38
        on right: 25 37
    arithmetics (84)
        on left: 39 40 41 42
        on right: 37
    relational (85)
        on left: 43 44 45 46 47 48
        on right: 20 25
    value (86)
        on left: 49 50 51 52 53
        on right: 20 24 29 38 54
    return (87)
        on left: 54 55
        on right: 1


State 0

    0 $accept: • program $end

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 4 (headers)]
    $default  reduce using rule 4 (headers)

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE •

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: headers • datatype MAIN PARENT_A PARENT_C INICIO body return FIN
    2 headers: headers • headers

    INCLUDE  shift, and go to state 1
    CHAR     shift, and go to state 5
    FLOAT    shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8

    INCLUDE  [reduce using rule 4 (headers)]
    CHAR     [reduce using rule 4 (headers)]
    FLOAT    [reduce using rule 4 (headers)]
    INT      [reduce using rule 4 (headers)]
    VOID     [reduce using rule 4 (headers)]

    headers   go to state 9
    datatype  go to state 10


State 4

    0 $accept: program $end •

    $default  accept


State 5

   16 datatype: CHAR •

    $default  reduce using rule 16 (datatype)


State 6

   18 datatype: FLOAT •

    $default  reduce using rule 18 (datatype)


State 7

   17 datatype: INT •

    $default  reduce using rule 17 (datatype)


State 8

   19 datatype: VOID •

    $default  reduce using rule 19 (datatype)


State 9

    2 headers: headers • headers
    2        | headers headers •

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    INCLUDE   [reduce using rule 4 (headers)]
    CHAR      reduce using rule 2 (headers)
    CHAR      [reduce using rule 4 (headers)]
    FLOAT     reduce using rule 2 (headers)
    FLOAT     [reduce using rule 4 (headers)]
    INT       reduce using rule 2 (headers)
    INT       [reduce using rule 4 (headers)]
    VOID      reduce using rule 2 (headers)
    VOID      [reduce using rule 4 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 9


State 10

    1 program: headers datatype • MAIN PARENT_A PARENT_C INICIO body return FIN

    MAIN  shift, and go to state 11


State 11

    1 program: headers datatype MAIN • PARENT_A PARENT_C INICIO body return FIN

    PARENT_A  shift, and go to state 12


State 12

    1 program: headers datatype MAIN PARENT_A • PARENT_C INICIO body return FIN

    PARENT_C  shift, and go to state 13


State 13

    1 program: headers datatype MAIN PARENT_A PARENT_C • INICIO body return FIN

    INICIO  shift, and go to state 14


State 14

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO • body return FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 24
    datatype   go to state 25
    statement  go to state 26


State 15

   28 statement: error •

    $default  reduce using rule 28 (statement)


State 16

   27 statement: UNARY • ID PUNTO_COMA

    ID  shift, and go to state 27


State 17

    8 body: DO • INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA

    INICIO  shift, and go to state 28


State 18

    6 body: FOR • PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    PARENT_A  shift, and go to state 29


State 19

    5 body: IF • PARENT_A condition PARENT_C INICIO body FIN else

    PARENT_A  shift, and go to state 30


State 20

   11 body: PRINTF • PARENT_A STRING PARENT_C PUNTO_COMA
   12     | PRINTF • PARENT_A STRING COMA ID PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 31


State 21

   13 body: SCANF • PARENT_A STRING COMA '&' ID PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 32


State 22

    7 body: WHILE • PARENT_A condition PARENT_C INICIO body FIN

    PARENT_A  shift, and go to state 33


State 23

   24 statement: ID • asignators value PUNTO_COMA
   25          | ID • relational expression PUNTO_COMA
   26          | ID • UNARY PUNTO_COMA

    UNARY           shift, and go to state 34
    OP_ASIG         shift, and go to state 35
    OP_MAYOR_IGUAL  shift, and go to state 36
    OP_MAYOR        shift, and go to state 37
    OP_MENOR_IGUAL  shift, and go to state 38
    OP_MENOR        shift, and go to state 39
    OP_DIST         shift, and go to state 40
    OP_IGUAL        shift, and go to state 41
    OP_INCRE_SUM    shift, and go to state 42
    OP_INCRE_MULT   shift, and go to state 43
    OP_INCRE_DIV    shift, and go to state 44
    OP_INCRE_SUST   shift, and go to state 45

    asignators  go to state 46
    relational  go to state 47


State 24

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body • return FIN
   10 body: body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    RETURN  shift, and go to state 48
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    FIN  reduce using rule 55 (return)

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26
    return     go to state 50


State 25

   23 statement: datatype • ID init PUNTO_COMA

    ID  shift, and go to state 51


State 26

    9 body: statement • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 52


State 27

   27 statement: UNARY ID • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 53


State 28

    8 body: DO INICIO • body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 54
    datatype   go to state 25
    statement  go to state 26


State 29

    6 body: FOR PARENT_A • statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    error  shift, and go to state 15
    UNARY  shift, and go to state 16
    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    ID     shift, and go to state 23

    datatype   go to state 25
    statement  go to state 55


State 30

    5 body: IF PARENT_A • condition PARENT_C INICIO body FIN else

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60
    TRUE            shift, and go to state 61
    FALSE           shift, and go to state 62

    condition  go to state 63
    value      go to state 64


State 31

   11 body: PRINTF PARENT_A • STRING PARENT_C PUNTO_COMA
   12     | PRINTF PARENT_A • STRING COMA ID PARENT_C PUNTO_COMA

    STRING  shift, and go to state 65


State 32

   13 body: SCANF PARENT_A • STRING COMA '&' ID PARENT_C PUNTO_COMA

    STRING  shift, and go to state 66


State 33

    7 body: WHILE PARENT_A • condition PARENT_C INICIO body FIN

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60
    TRUE            shift, and go to state 61
    FALSE           shift, and go to state 62

    condition  go to state 67
    value      go to state 64


State 34

   26 statement: ID UNARY • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 68


State 35

   32 asignators: OP_ASIG •

    $default  reduce using rule 32 (asignators)


State 36

   45 relational: OP_MAYOR_IGUAL •

    $default  reduce using rule 45 (relational)


State 37

   44 relational: OP_MAYOR •

    $default  reduce using rule 44 (relational)


State 38

   47 relational: OP_MENOR_IGUAL •

    $default  reduce using rule 47 (relational)


State 39

   46 relational: OP_MENOR •

    $default  reduce using rule 46 (relational)


State 40

   48 relational: OP_DIST •

    $default  reduce using rule 48 (relational)


State 41

   43 relational: OP_IGUAL •

    $default  reduce using rule 43 (relational)


State 42

   33 asignators: OP_INCRE_SUM •

    $default  reduce using rule 33 (asignators)


State 43

   36 asignators: OP_INCRE_MULT •

    $default  reduce using rule 36 (asignators)


State 44

   35 asignators: OP_INCRE_DIV •

    $default  reduce using rule 35 (asignators)


State 45

   34 asignators: OP_INCRE_SUST •

    $default  reduce using rule 34 (asignators)


State 46

   24 statement: ID asignators • value PUNTO_COMA

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60

    value  go to state 69


State 47

   25 statement: ID relational • expression PUNTO_COMA

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60

    expression  go to state 70
    value       go to state 71


State 48

   54 return: RETURN • value PUNTO_COMA

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60

    value  go to state 72


State 49

   10 body: body • body
   10     | body body •

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    error   [reduce using rule 10 (body)]
    UNARY   [reduce using rule 10 (body)]
    RETURN  reduce using rule 10 (body)
    CHAR    [reduce using rule 10 (body)]
    DO      [reduce using rule 10 (body)]
    FLOAT   [reduce using rule 10 (body)]
    FOR     [reduce using rule 10 (body)]
    IF      [reduce using rule 10 (body)]
    INT     [reduce using rule 10 (body)]
    PRINTF  [reduce using rule 10 (body)]
    SCANF   [reduce using rule 10 (body)]
    VOID    [reduce using rule 10 (body)]
    WHILE   [reduce using rule 10 (body)]
    FIN     reduce using rule 10 (body)
    ID      [reduce using rule 10 (body)]

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 50

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return • FIN

    FIN  shift, and go to state 73


State 51

   23 statement: datatype ID • init PUNTO_COMA

    OP_ASIG  shift, and go to state 74
    COMA     shift, and go to state 75

    $default  reduce using rule 31 (init)

    init  go to state 76


State 52

    9 body: statement PUNTO_COMA •

    $default  reduce using rule 9 (body)


State 53

   27 statement: UNARY ID PUNTO_COMA •

    $default  reduce using rule 27 (statement)


State 54

    8 body: DO INICIO body • FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
   10     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 77
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 55

    6 body: FOR PARENT_A statement • PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    PUNTO_COMA  shift, and go to state 78


State 56

   49 value: CHARACTER •

    $default  reduce using rule 49 (value)


State 57

   52 value: STRING •

    $default  reduce using rule 52 (value)


State 58

   50 value: FLOAT_NUMBER •

    $default  reduce using rule 50 (value)


State 59

   51 value: INTEGER_NUMBER •

    $default  reduce using rule 51 (value)


State 60

   53 value: ID •

    $default  reduce using rule 53 (value)


State 61

   21 condition: TRUE •

    $default  reduce using rule 21 (condition)


State 62

   22 condition: FALSE •

    $default  reduce using rule 22 (condition)


State 63

    5 body: IF PARENT_A condition • PARENT_C INICIO body FIN else

    PARENT_C  shift, and go to state 79


State 64

   20 condition: value • relational value

    OP_MAYOR_IGUAL  shift, and go to state 36
    OP_MAYOR        shift, and go to state 37
    OP_MENOR_IGUAL  shift, and go to state 38
    OP_MENOR        shift, and go to state 39
    OP_DIST         shift, and go to state 40
    OP_IGUAL        shift, and go to state 41

    relational  go to state 80


State 65

   11 body: PRINTF PARENT_A STRING • PARENT_C PUNTO_COMA
   12     | PRINTF PARENT_A STRING • COMA ID PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 81
    COMA      shift, and go to state 82


State 66

   13 body: SCANF PARENT_A STRING • COMA '&' ID PARENT_C PUNTO_COMA

    COMA  shift, and go to state 83


State 67

    7 body: WHILE PARENT_A condition • PARENT_C INICIO body FIN

    PARENT_C  shift, and go to state 84


State 68

   26 statement: ID UNARY PUNTO_COMA •

    $default  reduce using rule 26 (statement)


State 69

   24 statement: ID asignators value • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 85


State 70

   25 statement: ID relational expression • PUNTO_COMA
   37 expression: expression • arithmetics expression

    OP_MULT     shift, and go to state 86
    OP_SUMA     shift, and go to state 87
    OP_SUS      shift, and go to state 88
    OP_DIV      shift, and go to state 89
    PUNTO_COMA  shift, and go to state 90

    arithmetics  go to state 91


State 71

   38 expression: value •

    $default  reduce using rule 38 (expression)


State 72

   54 return: RETURN value • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 92


State 73

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return FIN •

    $default  reduce using rule 1 (program)


State 74

   29 init: OP_ASIG • value

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60

    value  go to state 93


State 75

   30 init: COMA • ID init

    ID  shift, and go to state 94


State 76

   23 statement: datatype ID init • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 95


State 77

    8 body: DO INICIO body FIN • WHILE PARENT_A condition PARENT_C PUNTO_COMA

    WHILE  shift, and go to state 96


State 78

    6 body: FOR PARENT_A statement PUNTO_COMA • condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60
    TRUE            shift, and go to state 61
    FALSE           shift, and go to state 62

    condition  go to state 97
    value      go to state 64


State 79

    5 body: IF PARENT_A condition PARENT_C • INICIO body FIN else

    INICIO  shift, and go to state 98


State 80

   20 condition: value relational • value

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60

    value  go to state 99


State 81

   11 body: PRINTF PARENT_A STRING PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 100


State 82

   12 body: PRINTF PARENT_A STRING COMA • ID PARENT_C PUNTO_COMA

    ID  shift, and go to state 101


State 83

   13 body: SCANF PARENT_A STRING COMA • '&' ID PARENT_C PUNTO_COMA

    '&'  shift, and go to state 102


State 84

    7 body: WHILE PARENT_A condition PARENT_C • INICIO body FIN

    INICIO  shift, and go to state 103


State 85

   24 statement: ID asignators value PUNTO_COMA •

    $default  reduce using rule 24 (statement)


State 86

   42 arithmetics: OP_MULT •

    $default  reduce using rule 42 (arithmetics)


State 87

   39 arithmetics: OP_SUMA •

    $default  reduce using rule 39 (arithmetics)


State 88

   40 arithmetics: OP_SUS •

    $default  reduce using rule 40 (arithmetics)


State 89

   41 arithmetics: OP_DIV •

    $default  reduce using rule 41 (arithmetics)


State 90

   25 statement: ID relational expression PUNTO_COMA •

    $default  reduce using rule 25 (statement)


State 91

   37 expression: expression arithmetics • expression

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60

    expression  go to state 104
    value       go to state 71


State 92

   54 return: RETURN value PUNTO_COMA •

    $default  reduce using rule 54 (return)


State 93

   29 init: OP_ASIG value •

    $default  reduce using rule 29 (init)


State 94

   30 init: COMA ID • init

    OP_ASIG  shift, and go to state 74
    COMA     shift, and go to state 75

    $default  reduce using rule 31 (init)

    init  go to state 105


State 95

   23 statement: datatype ID init PUNTO_COMA •

    $default  reduce using rule 23 (statement)


State 96

    8 body: DO INICIO body FIN WHILE • PARENT_A condition PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 106


State 97

    6 body: FOR PARENT_A statement PUNTO_COMA condition • PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA

    PUNTO_COMA  shift, and go to state 107


State 98

    5 body: IF PARENT_A condition PARENT_C INICIO • body FIN else

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 108
    datatype   go to state 25
    statement  go to state 26


State 99

   20 condition: value relational value •

    $default  reduce using rule 20 (condition)


State 100

   11 body: PRINTF PARENT_A STRING PARENT_C PUNTO_COMA •

    $default  reduce using rule 11 (body)


State 101

   12 body: PRINTF PARENT_A STRING COMA ID • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 109


State 102

   13 body: SCANF PARENT_A STRING COMA '&' • ID PARENT_C PUNTO_COMA

    ID  shift, and go to state 110


State 103

    7 body: WHILE PARENT_A condition PARENT_C INICIO • body FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 111
    datatype   go to state 25
    statement  go to state 26


State 104

   37 expression: expression • arithmetics expression
   37           | expression arithmetics expression •

    OP_MULT  shift, and go to state 86
    OP_SUMA  shift, and go to state 87
    OP_SUS   shift, and go to state 88
    OP_DIV   shift, and go to state 89

    OP_MULT   [reduce using rule 37 (expression)]
    OP_SUMA   [reduce using rule 37 (expression)]
    OP_SUS    [reduce using rule 37 (expression)]
    OP_DIV    [reduce using rule 37 (expression)]
    $default  reduce using rule 37 (expression)

    arithmetics  go to state 91


State 105

   30 init: COMA ID init •

    $default  reduce using rule 30 (init)


State 106

    8 body: DO INICIO body FIN WHILE PARENT_A • condition PARENT_C PUNTO_COMA

    CHARACTER       shift, and go to state 56
    STRING          shift, and go to state 57
    FLOAT_NUMBER    shift, and go to state 58
    INTEGER_NUMBER  shift, and go to state 59
    ID              shift, and go to state 60
    TRUE            shift, and go to state 61
    FALSE           shift, and go to state 62

    condition  go to state 112
    value      go to state 64


State 107

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA • statement PARENT_C INICIO body FIN PUNTO_COMA

    error  shift, and go to state 15
    UNARY  shift, and go to state 16
    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    ID     shift, and go to state 23

    datatype   go to state 25
    statement  go to state 113


State 108

    5 body: IF PARENT_A condition PARENT_C INICIO body • FIN else
   10     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 114
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 109

   12 body: PRINTF PARENT_A STRING COMA ID PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 115


State 110

   13 body: SCANF PARENT_A STRING COMA '&' ID • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 116


State 111

    7 body: WHILE PARENT_A condition PARENT_C INICIO body • FIN
   10     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 117
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 112

    8 body: DO INICIO body FIN WHILE PARENT_A condition • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 118


State 113

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement • PARENT_C INICIO body FIN PUNTO_COMA

    PARENT_C  shift, and go to state 119


State 114

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN • else

    ELSE  shift, and go to state 120

    $default  reduce using rule 15 (else)

    else  go to state 121


State 115

   12 body: PRINTF PARENT_A STRING COMA ID PARENT_C PUNTO_COMA •

    $default  reduce using rule 12 (body)


State 116

   13 body: SCANF PARENT_A STRING COMA '&' ID PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 122


State 117

    7 body: WHILE PARENT_A condition PARENT_C INICIO body FIN •

    $default  reduce using rule 7 (body)


State 118

    8 body: DO INICIO body FIN WHILE PARENT_A condition PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 123


State 119

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C • INICIO body FIN PUNTO_COMA

    INICIO  shift, and go to state 124


State 120

   14 else: ELSE • INICIO body FIN

    INICIO  shift, and go to state 125


State 121

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN else •

    $default  reduce using rule 5 (body)


State 122

   13 body: SCANF PARENT_A STRING COMA '&' ID PARENT_C PUNTO_COMA •

    $default  reduce using rule 13 (body)


State 123

    8 body: DO INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA •

    $default  reduce using rule 8 (body)


State 124

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO • body FIN PUNTO_COMA

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 126
    datatype   go to state 25
    statement  go to state 26


State 125

   14 else: ELSE INICIO • body FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 127
    datatype   go to state 25
    statement  go to state 26


State 126

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body • FIN PUNTO_COMA
   10     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 128
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 127

   10 body: body • body
   14 else: ELSE INICIO body • FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 129
    ID      shift, and go to state 23

    body       go to state 49
    datatype   go to state 25
    statement  go to state 26


State 128

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 130


State 129

   14 else: ELSE INICIO body FIN •

    $default  reduce using rule 14 (else)


State 130

    6 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA •

    $default  reduce using rule 6 (body)
