Terminals unused in grammar

    AUTO
    BREAK
    CASE
    CONST
    CONTINUE
    DEFAULT
    DOUBLE
    ENUM
    EXTERN
    GOTO
    LONG
    REGISTER
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    UNION
    UNSIGNED
    VOLATILE
    OP_NO


State 0 conflicts: 1 shift/reduce
State 3 conflicts: 5 shift/reduce
State 9 conflicts: 1 shift/reduce, 5 reduce/reduce
State 51 conflicts: 13 shift/reduce
State 68 conflicts: 1 shift/reduce
State 71 conflicts: 2 reduce/reduce
State 73 conflicts: 2 reduce/reduce
State 101 conflicts: 2 reduce/reduce
State 108 conflicts: 2 shift/reduce
State 109 conflicts: 5 shift/reduce
State 112 conflicts: 1 shift/reduce, 1 reduce/reduce
State 113 conflicts: 1 shift/reduce, 1 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return FIN

    2 headers: headers headers
    3        | INCLUDE
    4        | ε

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN else
    6     | IF PARENT_A condition PARENT_C statement PUNTO_COMA else
    7     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN
    8     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA
    9     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C statement PUNTO_COMA
   10     | WHILE PARENT_A condition PARENT_C INICIO body FIN
   11     | WHILE PARENT_A condition PARENT_C INICIO body FIN PUNTO_COMA
   12     | WHILE PARENT_A condition PARENT_C statement PUNTO_COMA
   13     | DO INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
   14     | DO statement PUNTO_COMA WHILE PARENT_A condition PARENT_C PUNTO_COMA
   15     | statement PUNTO_COMA
   16     | body body
   17     | PRINTF PARENT_A STRING moreParams PARENT_C PUNTO_COMA
   18     | PRINTF PARENT_A STRING PARENT_C PUNTO_COMA
   19     | SCANF PARENT_A STRING COMA ID PARENT_C PUNTO_COMA
   20     | error

   21 moreParams: COMA STRING moreParams
   22           | COMA ID moreParams
   23           | COMA expression moreParams
   24           | ε

   25 else: ELSE INICIO body FIN
   26     | ELSE statement PUNTO_COMA
   27     | ε

   28 datatype: CHAR
   29         | INT
   30         | FLOAT
   31         | VOID

   32 condition: expression relational expression
   33          | condition logic condition
   34          | TRUE
   35          | FALSE

   36 statement: datatype ID init
   37          | ID asignators value
   38          | ID asignators ID
   39          | ID asignators expression
   40          | ID relational expression
   41          | ID UNARY
   42          | UNARY ID
   43          | error

   44 init: OP_ASIG value
   45     | OP_ASIG expression
   46     | COMA ID init
   47     | ε

   48 asignators: OP_ASIG
   49           | OP_INCRE_SUM
   50           | OP_INCRE_SUST
   51           | OP_INCRE_DIV
   52           | OP_INCRE_MULT

   53 expression: expression arithmetics expression
   54           | value

   55 arithmetics: OP_SUMA
   56            | OP_SUS
   57            | OP_DIV
   58            | OP_MOD
   59            | OP_MULT

   60 relational: OP_IGUAL
   61           | OP_MAYOR
   62           | OP_MAYOR_IGUAL
   63           | OP_MENOR
   64           | OP_MENOR_IGUAL
   65           | OP_DIST

   66 value: CHARACTER
   67      | FLOAT_NUMBER
   68      | INTEGER
   69      | STRING
   70      | ID

   71 logic: OP_O
   72      | OP_Y

   73 return: RETURN value PUNTO_COMA
   74       | ε


Terminals, with rules where they appear

    $end (0) 0
    error (256) 20 43
    MAIN (258) 1
    INCLUDE (259) 3
    UNARY (260) 41 42
    RETURN (261) 73
    AUTO (262)
    BREAK (263)
    CASE (264)
    CHAR (265) 28
    CONST (266)
    CONTINUE (267)
    DEFAULT (268)
    DO (269) 13 14
    DOUBLE (270)
    ELSE (271) 25 26
    ENUM (272)
    EXTERN (273)
    FLOAT (274) 30
    FOR (275) 7 8 9
    GOTO (276)
    IF (277) 5 6
    INT (278) 29
    LONG (279)
    REGISTER (280)
    PRINTF (281) 17 18
    SCANF (282) 19
    SHORT (283)
    SIGNED (284)
    SIZEOF (285)
    STATIC (286)
    STRUCT (287)
    SWITCH (288)
    UNION (289)
    UNSIGNED (290)
    VOID (291) 31
    VOLATILE (292)
    WHILE (293) 10 11 12 13 14
    OP_MULT (294) 59
    OP_SUMA (295) 55
    OP_SUS (296) 56
    OP_DIV (297) 57
    OP_MOD (298) 58
    OP_ASIG (299) 44 45 48
    PUNTO_COMA (300) 6 7 8 9 11 12 13 14 15 17 18 19 26 73
    PARENT_A (301) 1 5 6 7 8 9 10 11 12 13 14 17 18 19
    PARENT_C (302) 1 5 6 7 8 9 10 11 12 13 14 17 18 19
    COMA (303) 19 21 22 23 46
    INICIO (304) 1 5 7 8 10 11 13 25
    FIN (305) 1 5 7 8 10 11 13 25
    OP_O (306) 71
    OP_NO (307)
    OP_MAYOR_IGUAL (308) 62
    OP_MAYOR (309) 61
    OP_MENOR_IGUAL (310) 64
    OP_MENOR (311) 63
    OP_DIST (312) 65
    OP_Y (313) 72
    OP_IGUAL (314) 60
    CHARACTER (315) 66
    STRING (316) 17 18 19 21 69
    FLOAT_NUMBER (317) 67
    INTEGER (318) 68
    ID (319) 19 22 36 37 38 39 40 41 42 46 70
    TRUE (320) 34
    FALSE (321) 35
    OP_INCRE_SUM (322) 49
    OP_INCRE_MULT (323) 52
    OP_INCRE_DIV (324) 51
    OP_INCRE_SUST (325) 50


Nonterminals, with rules where they appear

    $accept (71)
        on left: 0
    program (72)
        on left: 1
        on right: 0
    headers (73)
        on left: 2 3 4
        on right: 1 2
    body (74)
        on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20
        on right: 1 5 7 8 10 11 13 16 25
    moreParams (75)
        on left: 21 22 23 24
        on right: 17 21 22 23
    else (76)
        on left: 25 26 27
        on right: 5 6
    datatype (77)
        on left: 28 29 30 31
        on right: 1 36
    condition (78)
        on left: 32 33 34 35
        on right: 5 6 7 8 9 10 11 12 13 14 33
    statement (79)
        on left: 36 37 38 39 40 41 42 43
        on right: 6 7 8 9 12 14 15 26
    init (80)
        on left: 44 45 46 47
        on right: 36 46
    asignators (81)
        on left: 48 49 50 51 52
        on right: 37 38 39
    expression (82)
        on left: 53 54
        on right: 23 32 39 40 45 53
    arithmetics (83)
        on left: 55 56 57 58 59
        on right: 53
    relational (84)
        on left: 60 61 62 63 64 65
        on right: 32 40
    value (85)
        on left: 66 67 68 69 70
        on right: 37 44 54 73
    logic (86)
        on left: 71 72
        on right: 33
    return (87)
        on left: 73 74
        on right: 1


State 0

    0 $accept: • program $end

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 4 (headers)]
    $default  reduce using rule 4 (headers)

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE •

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: headers • datatype MAIN PARENT_A PARENT_C INICIO body return FIN
    2 headers: headers • headers

    INCLUDE  shift, and go to state 1
    CHAR     shift, and go to state 5
    FLOAT    shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8

    INCLUDE  [reduce using rule 4 (headers)]
    CHAR     [reduce using rule 4 (headers)]
    FLOAT    [reduce using rule 4 (headers)]
    INT      [reduce using rule 4 (headers)]
    VOID     [reduce using rule 4 (headers)]

    headers   go to state 9
    datatype  go to state 10


State 4

    0 $accept: program $end •

    $default  accept


State 5

   28 datatype: CHAR •

    $default  reduce using rule 28 (datatype)


State 6

   30 datatype: FLOAT •

    $default  reduce using rule 30 (datatype)


State 7

   29 datatype: INT •

    $default  reduce using rule 29 (datatype)


State 8

   31 datatype: VOID •

    $default  reduce using rule 31 (datatype)


State 9

    2 headers: headers • headers
    2        | headers headers •

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    INCLUDE   [reduce using rule 4 (headers)]
    CHAR      reduce using rule 2 (headers)
    CHAR      [reduce using rule 4 (headers)]
    FLOAT     reduce using rule 2 (headers)
    FLOAT     [reduce using rule 4 (headers)]
    INT       reduce using rule 2 (headers)
    INT       [reduce using rule 4 (headers)]
    VOID      reduce using rule 2 (headers)
    VOID      [reduce using rule 4 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 9


State 10

    1 program: headers datatype • MAIN PARENT_A PARENT_C INICIO body return FIN

    MAIN  shift, and go to state 11


State 11

    1 program: headers datatype MAIN • PARENT_A PARENT_C INICIO body return FIN

    PARENT_A  shift, and go to state 12


State 12

    1 program: headers datatype MAIN PARENT_A • PARENT_C INICIO body return FIN

    PARENT_C  shift, and go to state 13


State 13

    1 program: headers datatype MAIN PARENT_A PARENT_C • INICIO body return FIN

    INICIO  shift, and go to state 14


State 14

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO • body return FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 24
    datatype   go to state 25
    statement  go to state 26


State 15

   20 body: error •
   43 statement: error •

    PUNTO_COMA  reduce using rule 43 (statement)
    $default    reduce using rule 20 (body)


State 16

   42 statement: UNARY • ID

    ID  shift, and go to state 27


State 17

   13 body: DO • INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
   14     | DO • statement PUNTO_COMA WHILE PARENT_A condition PARENT_C PUNTO_COMA

    error   shift, and go to state 28
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    FLOAT   shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    INICIO  shift, and go to state 29
    ID      shift, and go to state 23

    datatype   go to state 25
    statement  go to state 30


State 18

    7 body: FOR • PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN
    8     | FOR • PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA
    9     | FOR • PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C statement PUNTO_COMA

    PARENT_A  shift, and go to state 31


State 19

    5 body: IF • PARENT_A condition PARENT_C INICIO body FIN else
    6     | IF • PARENT_A condition PARENT_C statement PUNTO_COMA else

    PARENT_A  shift, and go to state 32


State 20

   17 body: PRINTF • PARENT_A STRING moreParams PARENT_C PUNTO_COMA
   18     | PRINTF • PARENT_A STRING PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 33


State 21

   19 body: SCANF • PARENT_A STRING COMA ID PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 34


State 22

   10 body: WHILE • PARENT_A condition PARENT_C INICIO body FIN
   11     | WHILE • PARENT_A condition PARENT_C INICIO body FIN PUNTO_COMA
   12     | WHILE • PARENT_A condition PARENT_C statement PUNTO_COMA

    PARENT_A  shift, and go to state 35


State 23

   37 statement: ID • asignators value
   38          | ID • asignators ID
   39          | ID • asignators expression
   40          | ID • relational expression
   41          | ID • UNARY

    UNARY           shift, and go to state 36
    OP_ASIG         shift, and go to state 37
    OP_MAYOR_IGUAL  shift, and go to state 38
    OP_MAYOR        shift, and go to state 39
    OP_MENOR_IGUAL  shift, and go to state 40
    OP_MENOR        shift, and go to state 41
    OP_DIST         shift, and go to state 42
    OP_IGUAL        shift, and go to state 43
    OP_INCRE_SUM    shift, and go to state 44
    OP_INCRE_MULT   shift, and go to state 45
    OP_INCRE_DIV    shift, and go to state 46
    OP_INCRE_SUST   shift, and go to state 47

    asignators  go to state 48
    relational  go to state 49


State 24

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body • return FIN
   16 body: body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    RETURN  shift, and go to state 50
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    FIN  reduce using rule 74 (return)

    body       go to state 51
    datatype   go to state 25
    statement  go to state 26
    return     go to state 52


State 25

   36 statement: datatype • ID init

    ID  shift, and go to state 53


State 26

   15 body: statement • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 54


State 27

   42 statement: UNARY ID •

    $default  reduce using rule 42 (statement)


State 28

   43 statement: error •

    $default  reduce using rule 43 (statement)


State 29

   13 body: DO INICIO • body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 55
    datatype   go to state 25
    statement  go to state 26


State 30

   14 body: DO statement • PUNTO_COMA WHILE PARENT_A condition PARENT_C PUNTO_COMA

    PUNTO_COMA  shift, and go to state 56


State 31

    7 body: FOR PARENT_A • statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN
    8     | FOR PARENT_A • statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA
    9     | FOR PARENT_A • statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C statement PUNTO_COMA

    error  shift, and go to state 28
    UNARY  shift, and go to state 16
    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    ID     shift, and go to state 23

    datatype   go to state 25
    statement  go to state 57


State 32

    5 body: IF PARENT_A • condition PARENT_C INICIO body FIN else
    6     | IF PARENT_A • condition PARENT_C statement PUNTO_COMA else

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62
    TRUE          shift, and go to state 63
    FALSE         shift, and go to state 64

    condition   go to state 65
    expression  go to state 66
    value       go to state 67


State 33

   17 body: PRINTF PARENT_A • STRING moreParams PARENT_C PUNTO_COMA
   18     | PRINTF PARENT_A • STRING PARENT_C PUNTO_COMA

    STRING  shift, and go to state 68


State 34

   19 body: SCANF PARENT_A • STRING COMA ID PARENT_C PUNTO_COMA

    STRING  shift, and go to state 69


State 35

   10 body: WHILE PARENT_A • condition PARENT_C INICIO body FIN
   11     | WHILE PARENT_A • condition PARENT_C INICIO body FIN PUNTO_COMA
   12     | WHILE PARENT_A • condition PARENT_C statement PUNTO_COMA

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62
    TRUE          shift, and go to state 63
    FALSE         shift, and go to state 64

    condition   go to state 70
    expression  go to state 66
    value       go to state 67


State 36

   41 statement: ID UNARY •

    $default  reduce using rule 41 (statement)


State 37

   48 asignators: OP_ASIG •

    $default  reduce using rule 48 (asignators)


State 38

   62 relational: OP_MAYOR_IGUAL •

    $default  reduce using rule 62 (relational)


State 39

   61 relational: OP_MAYOR •

    $default  reduce using rule 61 (relational)


State 40

   64 relational: OP_MENOR_IGUAL •

    $default  reduce using rule 64 (relational)


State 41

   63 relational: OP_MENOR •

    $default  reduce using rule 63 (relational)


State 42

   65 relational: OP_DIST •

    $default  reduce using rule 65 (relational)


State 43

   60 relational: OP_IGUAL •

    $default  reduce using rule 60 (relational)


State 44

   49 asignators: OP_INCRE_SUM •

    $default  reduce using rule 49 (asignators)


State 45

   52 asignators: OP_INCRE_MULT •

    $default  reduce using rule 52 (asignators)


State 46

   51 asignators: OP_INCRE_DIV •

    $default  reduce using rule 51 (asignators)


State 47

   50 asignators: OP_INCRE_SUST •

    $default  reduce using rule 50 (asignators)


State 48

   37 statement: ID asignators • value
   38          | ID asignators • ID
   39          | ID asignators • expression

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 71

    expression  go to state 72
    value       go to state 73


State 49

   40 statement: ID relational • expression

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62

    expression  go to state 74
    value       go to state 67


State 50

   73 return: RETURN • value PUNTO_COMA

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62

    value  go to state 75


State 51

   16 body: body • body
   16     | body body •

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    error   [reduce using rule 16 (body)]
    UNARY   [reduce using rule 16 (body)]
    RETURN  reduce using rule 16 (body)
    CHAR    [reduce using rule 16 (body)]
    DO      [reduce using rule 16 (body)]
    FLOAT   [reduce using rule 16 (body)]
    FOR     [reduce using rule 16 (body)]
    IF      [reduce using rule 16 (body)]
    INT     [reduce using rule 16 (body)]
    PRINTF  [reduce using rule 16 (body)]
    SCANF   [reduce using rule 16 (body)]
    VOID    [reduce using rule 16 (body)]
    WHILE   [reduce using rule 16 (body)]
    FIN     reduce using rule 16 (body)
    ID      [reduce using rule 16 (body)]

    body       go to state 51
    datatype   go to state 25
    statement  go to state 26


State 52

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return • FIN

    FIN  shift, and go to state 76


State 53

   36 statement: datatype ID • init

    OP_ASIG  shift, and go to state 77
    COMA     shift, and go to state 78

    $default  reduce using rule 47 (init)

    init  go to state 79


State 54

   15 body: statement PUNTO_COMA •

    $default  reduce using rule 15 (body)


State 55

   13 body: DO INICIO body • FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
   16     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 80
    ID      shift, and go to state 23

    body       go to state 51
    datatype   go to state 25
    statement  go to state 26


State 56

   14 body: DO statement PUNTO_COMA • WHILE PARENT_A condition PARENT_C PUNTO_COMA

    WHILE  shift, and go to state 81


State 57

    7 body: FOR PARENT_A statement • PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN
    8     | FOR PARENT_A statement • PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA
    9     | FOR PARENT_A statement • PUNTO_COMA condition PUNTO_COMA statement PARENT_C statement PUNTO_COMA

    PUNTO_COMA  shift, and go to state 82


State 58

   66 value: CHARACTER •

    $default  reduce using rule 66 (value)


State 59

   69 value: STRING •

    $default  reduce using rule 69 (value)


State 60

   67 value: FLOAT_NUMBER •

    $default  reduce using rule 67 (value)


State 61

   68 value: INTEGER •

    $default  reduce using rule 68 (value)


State 62

   70 value: ID •

    $default  reduce using rule 70 (value)


State 63

   34 condition: TRUE •

    $default  reduce using rule 34 (condition)


State 64

   35 condition: FALSE •

    $default  reduce using rule 35 (condition)


State 65

    5 body: IF PARENT_A condition • PARENT_C INICIO body FIN else
    6     | IF PARENT_A condition • PARENT_C statement PUNTO_COMA else
   33 condition: condition • logic condition

    PARENT_C  shift, and go to state 83
    OP_O      shift, and go to state 84
    OP_Y      shift, and go to state 85

    logic  go to state 86


State 66

   32 condition: expression • relational expression
   53 expression: expression • arithmetics expression

    OP_MULT         shift, and go to state 87
    OP_SUMA         shift, and go to state 88
    OP_SUS          shift, and go to state 89
    OP_DIV          shift, and go to state 90
    OP_MOD          shift, and go to state 91
    OP_MAYOR_IGUAL  shift, and go to state 38
    OP_MAYOR        shift, and go to state 39
    OP_MENOR_IGUAL  shift, and go to state 40
    OP_MENOR        shift, and go to state 41
    OP_DIST         shift, and go to state 42
    OP_IGUAL        shift, and go to state 43

    arithmetics  go to state 92
    relational   go to state 93


State 67

   54 expression: value •

    $default  reduce using rule 54 (expression)


State 68

   17 body: PRINTF PARENT_A STRING • moreParams PARENT_C PUNTO_COMA
   18     | PRINTF PARENT_A STRING • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 94
    COMA      shift, and go to state 95

    PARENT_C  [reduce using rule 24 (moreParams)]

    moreParams  go to state 96


State 69

   19 body: SCANF PARENT_A STRING • COMA ID PARENT_C PUNTO_COMA

    COMA  shift, and go to state 97


State 70

   10 body: WHILE PARENT_A condition • PARENT_C INICIO body FIN
   11     | WHILE PARENT_A condition • PARENT_C INICIO body FIN PUNTO_COMA
   12     | WHILE PARENT_A condition • PARENT_C statement PUNTO_COMA
   33 condition: condition • logic condition

    PARENT_C  shift, and go to state 98
    OP_O      shift, and go to state 84
    OP_Y      shift, and go to state 85

    logic  go to state 86


State 71

   38 statement: ID asignators ID •
   70 value: ID •

    PUNTO_COMA  reduce using rule 38 (statement)
    PUNTO_COMA  [reduce using rule 70 (value)]
    PARENT_C    reduce using rule 38 (statement)
    PARENT_C    [reduce using rule 70 (value)]
    $default    reduce using rule 70 (value)


State 72

   39 statement: ID asignators expression •
   53 expression: expression • arithmetics expression

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    $default  reduce using rule 39 (statement)

    arithmetics  go to state 92


State 73

   37 statement: ID asignators value •
   54 expression: value •

    PUNTO_COMA  reduce using rule 37 (statement)
    PUNTO_COMA  [reduce using rule 54 (expression)]
    PARENT_C    reduce using rule 37 (statement)
    PARENT_C    [reduce using rule 54 (expression)]
    $default    reduce using rule 54 (expression)


State 74

   40 statement: ID relational expression •
   53 expression: expression • arithmetics expression

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    $default  reduce using rule 40 (statement)

    arithmetics  go to state 92


State 75

   73 return: RETURN value • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 99


State 76

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return FIN •

    $default  reduce using rule 1 (program)


State 77

   44 init: OP_ASIG • value
   45     | OP_ASIG • expression

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62

    expression  go to state 100
    value       go to state 101


State 78

   46 init: COMA • ID init

    ID  shift, and go to state 102


State 79

   36 statement: datatype ID init •

    $default  reduce using rule 36 (statement)


State 80

   13 body: DO INICIO body FIN • WHILE PARENT_A condition PARENT_C PUNTO_COMA

    WHILE  shift, and go to state 103


State 81

   14 body: DO statement PUNTO_COMA WHILE • PARENT_A condition PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 104


State 82

    7 body: FOR PARENT_A statement PUNTO_COMA • condition PUNTO_COMA statement PARENT_C INICIO body FIN
    8     | FOR PARENT_A statement PUNTO_COMA • condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA
    9     | FOR PARENT_A statement PUNTO_COMA • condition PUNTO_COMA statement PARENT_C statement PUNTO_COMA

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62
    TRUE          shift, and go to state 63
    FALSE         shift, and go to state 64

    condition   go to state 105
    expression  go to state 66
    value       go to state 67


State 83

    5 body: IF PARENT_A condition PARENT_C • INICIO body FIN else
    6     | IF PARENT_A condition PARENT_C • statement PUNTO_COMA else

    error   shift, and go to state 28
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    FLOAT   shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    INICIO  shift, and go to state 106
    ID      shift, and go to state 23

    datatype   go to state 25
    statement  go to state 107


State 84

   71 logic: OP_O •

    $default  reduce using rule 71 (logic)


State 85

   72 logic: OP_Y •

    $default  reduce using rule 72 (logic)


State 86

   33 condition: condition logic • condition

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62
    TRUE          shift, and go to state 63
    FALSE         shift, and go to state 64

    condition   go to state 108
    expression  go to state 66
    value       go to state 67


State 87

   59 arithmetics: OP_MULT •

    $default  reduce using rule 59 (arithmetics)


State 88

   55 arithmetics: OP_SUMA •

    $default  reduce using rule 55 (arithmetics)


State 89

   56 arithmetics: OP_SUS •

    $default  reduce using rule 56 (arithmetics)


State 90

   57 arithmetics: OP_DIV •

    $default  reduce using rule 57 (arithmetics)


State 91

   58 arithmetics: OP_MOD •

    $default  reduce using rule 58 (arithmetics)


State 92

   53 expression: expression arithmetics • expression

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62

    expression  go to state 109
    value       go to state 67


State 93

   32 condition: expression relational • expression

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62

    expression  go to state 110
    value       go to state 67


State 94

   18 body: PRINTF PARENT_A STRING PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 111


State 95

   21 moreParams: COMA • STRING moreParams
   22           | COMA • ID moreParams
   23           | COMA • expression moreParams

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 112
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 113

    expression  go to state 114
    value       go to state 67


State 96

   17 body: PRINTF PARENT_A STRING moreParams • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 115


State 97

   19 body: SCANF PARENT_A STRING COMA • ID PARENT_C PUNTO_COMA

    ID  shift, and go to state 116


State 98

   10 body: WHILE PARENT_A condition PARENT_C • INICIO body FIN
   11     | WHILE PARENT_A condition PARENT_C • INICIO body FIN PUNTO_COMA
   12     | WHILE PARENT_A condition PARENT_C • statement PUNTO_COMA

    error   shift, and go to state 28
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    FLOAT   shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    INICIO  shift, and go to state 117
    ID      shift, and go to state 23

    datatype   go to state 25
    statement  go to state 118


State 99

   73 return: RETURN value PUNTO_COMA •

    $default  reduce using rule 73 (return)


State 100

   45 init: OP_ASIG expression •
   53 expression: expression • arithmetics expression

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    $default  reduce using rule 45 (init)

    arithmetics  go to state 92


State 101

   44 init: OP_ASIG value •
   54 expression: value •

    PUNTO_COMA  reduce using rule 44 (init)
    PUNTO_COMA  [reduce using rule 54 (expression)]
    PARENT_C    reduce using rule 44 (init)
    PARENT_C    [reduce using rule 54 (expression)]
    $default    reduce using rule 54 (expression)


State 102

   46 init: COMA ID • init

    OP_ASIG  shift, and go to state 77
    COMA     shift, and go to state 78

    $default  reduce using rule 47 (init)

    init  go to state 119


State 103

   13 body: DO INICIO body FIN WHILE • PARENT_A condition PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 120


State 104

   14 body: DO statement PUNTO_COMA WHILE PARENT_A • condition PARENT_C PUNTO_COMA

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62
    TRUE          shift, and go to state 63
    FALSE         shift, and go to state 64

    condition   go to state 121
    expression  go to state 66
    value       go to state 67


State 105

    7 body: FOR PARENT_A statement PUNTO_COMA condition • PUNTO_COMA statement PARENT_C INICIO body FIN
    8     | FOR PARENT_A statement PUNTO_COMA condition • PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA
    9     | FOR PARENT_A statement PUNTO_COMA condition • PUNTO_COMA statement PARENT_C statement PUNTO_COMA
   33 condition: condition • logic condition

    PUNTO_COMA  shift, and go to state 122
    OP_O        shift, and go to state 84
    OP_Y        shift, and go to state 85

    logic  go to state 86


State 106

    5 body: IF PARENT_A condition PARENT_C INICIO • body FIN else

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 123
    datatype   go to state 25
    statement  go to state 26


State 107

    6 body: IF PARENT_A condition PARENT_C statement • PUNTO_COMA else

    PUNTO_COMA  shift, and go to state 124


State 108

   33 condition: condition • logic condition
   33          | condition logic condition •

    OP_O  shift, and go to state 84
    OP_Y  shift, and go to state 85

    OP_O      [reduce using rule 33 (condition)]
    OP_Y      [reduce using rule 33 (condition)]
    $default  reduce using rule 33 (condition)

    logic  go to state 86


State 109

   53 expression: expression • arithmetics expression
   53           | expression arithmetics expression •

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    OP_MULT   [reduce using rule 53 (expression)]
    OP_SUMA   [reduce using rule 53 (expression)]
    OP_SUS    [reduce using rule 53 (expression)]
    OP_DIV    [reduce using rule 53 (expression)]
    OP_MOD    [reduce using rule 53 (expression)]
    $default  reduce using rule 53 (expression)

    arithmetics  go to state 92


State 110

   32 condition: expression relational expression •
   53 expression: expression • arithmetics expression

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91

    $default  reduce using rule 32 (condition)

    arithmetics  go to state 92


State 111

   18 body: PRINTF PARENT_A STRING PARENT_C PUNTO_COMA •

    $default  reduce using rule 18 (body)


State 112

   21 moreParams: COMA STRING • moreParams
   69 value: STRING •

    COMA  shift, and go to state 95

    PARENT_C  reduce using rule 24 (moreParams)
    PARENT_C  [reduce using rule 69 (value)]
    COMA      [reduce using rule 69 (value)]
    $default  reduce using rule 69 (value)

    moreParams  go to state 125


State 113

   22 moreParams: COMA ID • moreParams
   70 value: ID •

    COMA  shift, and go to state 95

    PARENT_C  reduce using rule 24 (moreParams)
    PARENT_C  [reduce using rule 70 (value)]
    COMA      [reduce using rule 70 (value)]
    $default  reduce using rule 70 (value)

    moreParams  go to state 126


State 114

   23 moreParams: COMA expression • moreParams
   53 expression: expression • arithmetics expression

    OP_MULT  shift, and go to state 87
    OP_SUMA  shift, and go to state 88
    OP_SUS   shift, and go to state 89
    OP_DIV   shift, and go to state 90
    OP_MOD   shift, and go to state 91
    COMA     shift, and go to state 95

    $default  reduce using rule 24 (moreParams)

    moreParams   go to state 127
    arithmetics  go to state 92


State 115

   17 body: PRINTF PARENT_A STRING moreParams PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 128


State 116

   19 body: SCANF PARENT_A STRING COMA ID • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 129


State 117

   10 body: WHILE PARENT_A condition PARENT_C INICIO • body FIN
   11     | WHILE PARENT_A condition PARENT_C INICIO • body FIN PUNTO_COMA

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 130
    datatype   go to state 25
    statement  go to state 26


State 118

   12 body: WHILE PARENT_A condition PARENT_C statement • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 131


State 119

   46 init: COMA ID init •

    $default  reduce using rule 46 (init)


State 120

   13 body: DO INICIO body FIN WHILE PARENT_A • condition PARENT_C PUNTO_COMA

    CHARACTER     shift, and go to state 58
    STRING        shift, and go to state 59
    FLOAT_NUMBER  shift, and go to state 60
    INTEGER       shift, and go to state 61
    ID            shift, and go to state 62
    TRUE          shift, and go to state 63
    FALSE         shift, and go to state 64

    condition   go to state 132
    expression  go to state 66
    value       go to state 67


State 121

   14 body: DO statement PUNTO_COMA WHILE PARENT_A condition • PARENT_C PUNTO_COMA
   33 condition: condition • logic condition

    PARENT_C  shift, and go to state 133
    OP_O      shift, and go to state 84
    OP_Y      shift, and go to state 85

    logic  go to state 86


State 122

    7 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA • statement PARENT_C INICIO body FIN
    8     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA • statement PARENT_C INICIO body FIN PUNTO_COMA
    9     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA • statement PARENT_C statement PUNTO_COMA

    error  shift, and go to state 28
    UNARY  shift, and go to state 16
    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    ID     shift, and go to state 23

    datatype   go to state 25
    statement  go to state 134


State 123

    5 body: IF PARENT_A condition PARENT_C INICIO body • FIN else
   16     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 135
    ID      shift, and go to state 23

    body       go to state 51
    datatype   go to state 25
    statement  go to state 26


State 124

    6 body: IF PARENT_A condition PARENT_C statement PUNTO_COMA • else

    ELSE  shift, and go to state 136

    $default  reduce using rule 27 (else)

    else  go to state 137


State 125

   21 moreParams: COMA STRING moreParams •

    $default  reduce using rule 21 (moreParams)


State 126

   22 moreParams: COMA ID moreParams •

    $default  reduce using rule 22 (moreParams)


State 127

   23 moreParams: COMA expression moreParams •

    $default  reduce using rule 23 (moreParams)


State 128

   17 body: PRINTF PARENT_A STRING moreParams PARENT_C PUNTO_COMA •

    $default  reduce using rule 17 (body)


State 129

   19 body: SCANF PARENT_A STRING COMA ID PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 138


State 130

   10 body: WHILE PARENT_A condition PARENT_C INICIO body • FIN
   11     | WHILE PARENT_A condition PARENT_C INICIO body • FIN PUNTO_COMA
   16     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 139
    ID      shift, and go to state 23

    body       go to state 51
    datatype   go to state 25
    statement  go to state 26


State 131

   12 body: WHILE PARENT_A condition PARENT_C statement PUNTO_COMA •

    $default  reduce using rule 12 (body)


State 132

   13 body: DO INICIO body FIN WHILE PARENT_A condition • PARENT_C PUNTO_COMA
   33 condition: condition • logic condition

    PARENT_C  shift, and go to state 140
    OP_O      shift, and go to state 84
    OP_Y      shift, and go to state 85

    logic  go to state 86


State 133

   14 body: DO statement PUNTO_COMA WHILE PARENT_A condition PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 141


State 134

    7 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement • PARENT_C INICIO body FIN
    8     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement • PARENT_C INICIO body FIN PUNTO_COMA
    9     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement • PARENT_C statement PUNTO_COMA

    PARENT_C  shift, and go to state 142


State 135

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN • else

    ELSE  shift, and go to state 136

    $default  reduce using rule 27 (else)

    else  go to state 143


State 136

   25 else: ELSE • INICIO body FIN
   26     | ELSE • statement PUNTO_COMA

    error   shift, and go to state 28
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    FLOAT   shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    INICIO  shift, and go to state 144
    ID      shift, and go to state 23

    datatype   go to state 25
    statement  go to state 145


State 137

    6 body: IF PARENT_A condition PARENT_C statement PUNTO_COMA else •

    $default  reduce using rule 6 (body)


State 138

   19 body: SCANF PARENT_A STRING COMA ID PARENT_C PUNTO_COMA •

    $default  reduce using rule 19 (body)


State 139

   10 body: WHILE PARENT_A condition PARENT_C INICIO body FIN •
   11     | WHILE PARENT_A condition PARENT_C INICIO body FIN • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 146

    $default  reduce using rule 10 (body)


State 140

   13 body: DO INICIO body FIN WHILE PARENT_A condition PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 147


State 141

   14 body: DO statement PUNTO_COMA WHILE PARENT_A condition PARENT_C PUNTO_COMA •

    $default  reduce using rule 14 (body)


State 142

    7 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C • INICIO body FIN
    8     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C • INICIO body FIN PUNTO_COMA
    9     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C • statement PUNTO_COMA

    error   shift, and go to state 28
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    FLOAT   shift, and go to state 6
    INT     shift, and go to state 7
    VOID    shift, and go to state 8
    INICIO  shift, and go to state 148
    ID      shift, and go to state 23

    datatype   go to state 25
    statement  go to state 149


State 143

    5 body: IF PARENT_A condition PARENT_C INICIO body FIN else •

    $default  reduce using rule 5 (body)


State 144

   25 else: ELSE INICIO • body FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 150
    datatype   go to state 25
    statement  go to state 26


State 145

   26 else: ELSE statement • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 151


State 146

   11 body: WHILE PARENT_A condition PARENT_C INICIO body FIN PUNTO_COMA •

    $default  reduce using rule 11 (body)


State 147

   13 body: DO INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA •

    $default  reduce using rule 13 (body)


State 148

    7 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO • body FIN
    8     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO • body FIN PUNTO_COMA

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    ID      shift, and go to state 23

    body       go to state 152
    datatype   go to state 25
    statement  go to state 26


State 149

    9 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C statement • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 153


State 150

   16 body: body • body
   25 else: ELSE INICIO body • FIN

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 154
    ID      shift, and go to state 23

    body       go to state 51
    datatype   go to state 25
    statement  go to state 26


State 151

   26 else: ELSE statement PUNTO_COMA •

    $default  reduce using rule 26 (else)


State 152

    7 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body • FIN
    8     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body • FIN PUNTO_COMA
   16     | body • body

    error   shift, and go to state 15
    UNARY   shift, and go to state 16
    CHAR    shift, and go to state 5
    DO      shift, and go to state 17
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 18
    IF      shift, and go to state 19
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 20
    SCANF   shift, and go to state 21
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 22
    FIN     shift, and go to state 155
    ID      shift, and go to state 23

    body       go to state 51
    datatype   go to state 25
    statement  go to state 26


State 153

    9 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C statement PUNTO_COMA •

    $default  reduce using rule 9 (body)


State 154

   25 else: ELSE INICIO body FIN •

    $default  reduce using rule 25 (else)


State 155

    7 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN •
    8     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 156

    $default  reduce using rule 7 (body)


State 156

    8 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN PUNTO_COMA •

    $default  reduce using rule 8 (body)
