Terminals unused in grammar

    AUTO
    BREAK
    CASE
    CONST
    CONTINUE
    DEFAULT
    DOUBLE
    ENUM
    EXTERN
    GOTO
    LONG
    REGISTER
    SHORT
    SIGNED
    SIZEOF
    STATIC
    STRUCT
    SWITCH
    UNION
    UNSIGNED
    VOLATILE
    OP_MOD
    OP_O
    OP_NO
    OP_Y


State 9 conflicts: 1 shift/reduce
State 43 conflicts: 12 shift/reduce
State 96 conflicts: 4 shift/reduce


Grammar

    0 $accept: program $end

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return FIN

    2 headers: headers headers
    3        | INCLUDE

    4 body: IF PARENT_A condition PARENT_C INICIO body FIN else
    5     | FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN
    6     | WHILE PARENT_A condition PARENT_C INICIO body FIN
    7     | DO INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
    8     | statement PUNTO_COMA
    9     | body body
   10     | PRINTF PARENT_A STRING PARENT_C PUNTO_COMA
   11     | SCANF PARENT_A STRING COMA '&' ID PARENT_C PUNTO_COMA

   12 else: ELSE INICIO body FIN
   13     | ε

   14 datatype: CHAR
   15         | INT
   16         | FLOAT
   17         | VOID

   18 condition: value relational value
   19          | TRUE
   20          | FALSE

   21 statement: datatype ID init PUNTO_COMA
   22          | ID OP_ASIG expression PUNTO_COMA
   23          | ID relational expression PUNTO_COMA
   24          | ID UNARY PUNTO_COMA
   25          | UNARY ID PUNTO_COMA

   26 init: OP_ASIG value
   27     | COMA ID init
   28     | ε

   29 expression: expression arithmetics expression
   30           | value

   31 arithmetics: OP_SUMA
   32            | OP_SUS
   33            | OP_DIV
   34            | OP_MULT

   35 relational: OP_IGUAL
   36           | OP_MAYOR
   37           | OP_MAYOR_IGUAL
   38           | OP_MENOR
   39           | OP_MENOR_IGUAL
   40           | OP_DIST

   41 value: CHARACTER
   42      | FLOAT_NUMBER
   43      | INTEGER_NUMBER
   44      | STRING
   45      | ID

   46 return: RETURN value PUNTO_COMA
   47       | ε


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 11
    error (256)
    MAIN (258) 1
    INCLUDE (259) 3
    UNARY (260) 24 25
    RETURN (261) 46
    AUTO (262)
    BREAK (263)
    CASE (264)
    CHAR (265) 14
    CONST (266)
    CONTINUE (267)
    DEFAULT (268)
    DO (269) 7
    DOUBLE (270)
    ELSE (271) 12
    ENUM (272)
    EXTERN (273)
    FLOAT (274) 16
    FOR (275) 5
    GOTO (276)
    IF (277) 4
    INT (278) 15
    LONG (279)
    REGISTER (280)
    PRINTF (281) 10
    SCANF (282) 11
    SHORT (283)
    SIGNED (284)
    SIZEOF (285)
    STATIC (286)
    STRUCT (287)
    SWITCH (288)
    UNION (289)
    UNSIGNED (290)
    VOID (291) 17
    VOLATILE (292)
    WHILE (293) 6 7
    OP_MULT (294) 34
    OP_SUMA (295) 31
    OP_SUS (296) 32
    OP_DIV (297) 33
    OP_MOD (298)
    OP_ASIG (299) 22 26
    PUNTO_COMA (300) 5 7 8 10 11 21 22 23 24 25 46
    PARENT_A (301) 1 4 5 6 7 10 11
    PARENT_C (302) 1 4 5 6 7 10 11
    COMA (303) 11 27
    INICIO (304) 1 4 5 6 7 12
    FIN (305) 1 4 5 6 7 12
    OP_O (306)
    OP_NO (307)
    OP_MAYOR_IGUAL (308) 37
    OP_MAYOR (309) 36
    OP_MENOR_IGUAL (310) 39
    OP_MENOR (311) 38
    OP_DIST (312) 40
    OP_Y (313)
    OP_IGUAL (314) 35
    CHARACTER (315) 41
    STRING (316) 10 11 44
    FLOAT_NUMBER (317) 42
    INTEGER_NUMBER (318) 43
    ID (319) 11 21 22 23 24 25 27 45
    TRUE (320) 19
    FALSE (321) 20


Nonterminals, with rules where they appear

    $accept (68)
        on left: 0
    program (69)
        on left: 1
        on right: 0
    headers (70)
        on left: 2 3
        on right: 1 2
    body (71)
        on left: 4 5 6 7 8 9 10 11
        on right: 1 4 5 6 7 9 12
    else (72)
        on left: 12 13
        on right: 4
    datatype (73)
        on left: 14 15 16 17
        on right: 1 21
    condition (74)
        on left: 18 19 20
        on right: 4 5 6 7
    statement (75)
        on left: 21 22 23 24 25
        on right: 5 8
    init (76)
        on left: 26 27 28
        on right: 21 27
    expression (77)
        on left: 29 30
        on right: 22 23 29
    arithmetics (78)
        on left: 31 32 33 34
        on right: 29
    relational (79)
        on left: 35 36 37 38 39 40
        on right: 18 23
    value (80)
        on left: 41 42 43 44 45
        on right: 18 26 30 46
    return (81)
        on left: 46 47
        on right: 1


State 0

    0 $accept: • program $end

    INCLUDE  shift, and go to state 1

    program  go to state 2
    headers  go to state 3


State 1

    3 headers: INCLUDE •

    $default  reduce using rule 3 (headers)


State 2

    0 $accept: program • $end

    $end  shift, and go to state 4


State 3

    1 program: headers • datatype MAIN PARENT_A PARENT_C INICIO body return FIN
    2 headers: headers • headers

    INCLUDE  shift, and go to state 1
    CHAR     shift, and go to state 5
    FLOAT    shift, and go to state 6
    INT      shift, and go to state 7
    VOID     shift, and go to state 8

    headers   go to state 9
    datatype  go to state 10


State 4

    0 $accept: program $end •

    $default  accept


State 5

   14 datatype: CHAR •

    $default  reduce using rule 14 (datatype)


State 6

   16 datatype: FLOAT •

    $default  reduce using rule 16 (datatype)


State 7

   15 datatype: INT •

    $default  reduce using rule 15 (datatype)


State 8

   17 datatype: VOID •

    $default  reduce using rule 17 (datatype)


State 9

    2 headers: headers • headers
    2        | headers headers •

    INCLUDE  shift, and go to state 1

    INCLUDE   [reduce using rule 2 (headers)]
    $default  reduce using rule 2 (headers)

    headers  go to state 9


State 10

    1 program: headers datatype • MAIN PARENT_A PARENT_C INICIO body return FIN

    MAIN  shift, and go to state 11


State 11

    1 program: headers datatype MAIN • PARENT_A PARENT_C INICIO body return FIN

    PARENT_A  shift, and go to state 12


State 12

    1 program: headers datatype MAIN PARENT_A • PARENT_C INICIO body return FIN

    PARENT_C  shift, and go to state 13


State 13

    1 program: headers datatype MAIN PARENT_A PARENT_C • INICIO body return FIN

    INICIO  shift, and go to state 14


State 14

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO • body return FIN

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    ID      shift, and go to state 22

    body       go to state 23
    datatype   go to state 24
    statement  go to state 25


State 15

   25 statement: UNARY • ID PUNTO_COMA

    ID  shift, and go to state 26


State 16

    7 body: DO • INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA

    INICIO  shift, and go to state 27


State 17

    5 body: FOR • PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN

    PARENT_A  shift, and go to state 28


State 18

    4 body: IF • PARENT_A condition PARENT_C INICIO body FIN else

    PARENT_A  shift, and go to state 29


State 19

   10 body: PRINTF • PARENT_A STRING PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 30


State 20

   11 body: SCANF • PARENT_A STRING COMA '&' ID PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 31


State 21

    6 body: WHILE • PARENT_A condition PARENT_C INICIO body FIN

    PARENT_A  shift, and go to state 32


State 22

   22 statement: ID • OP_ASIG expression PUNTO_COMA
   23          | ID • relational expression PUNTO_COMA
   24          | ID • UNARY PUNTO_COMA

    UNARY           shift, and go to state 33
    OP_ASIG         shift, and go to state 34
    OP_MAYOR_IGUAL  shift, and go to state 35
    OP_MAYOR        shift, and go to state 36
    OP_MENOR_IGUAL  shift, and go to state 37
    OP_MENOR        shift, and go to state 38
    OP_DIST         shift, and go to state 39
    OP_IGUAL        shift, and go to state 40

    relational  go to state 41


State 23

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body • return FIN
    9 body: body • body

    UNARY   shift, and go to state 15
    RETURN  shift, and go to state 42
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    ID      shift, and go to state 22

    $default  reduce using rule 47 (return)

    body       go to state 43
    datatype   go to state 24
    statement  go to state 25
    return     go to state 44


State 24

   21 statement: datatype • ID init PUNTO_COMA

    ID  shift, and go to state 45


State 25

    8 body: statement • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 46


State 26

   25 statement: UNARY ID • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 47


State 27

    7 body: DO INICIO • body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    ID      shift, and go to state 22

    body       go to state 48
    datatype   go to state 24
    statement  go to state 25


State 28

    5 body: FOR PARENT_A • statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN

    UNARY  shift, and go to state 15
    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    ID     shift, and go to state 22

    datatype   go to state 24
    statement  go to state 49


State 29

    4 body: IF PARENT_A • condition PARENT_C INICIO body FIN else

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54
    TRUE            shift, and go to state 55
    FALSE           shift, and go to state 56

    condition  go to state 57
    value      go to state 58


State 30

   10 body: PRINTF PARENT_A • STRING PARENT_C PUNTO_COMA

    STRING  shift, and go to state 59


State 31

   11 body: SCANF PARENT_A • STRING COMA '&' ID PARENT_C PUNTO_COMA

    STRING  shift, and go to state 60


State 32

    6 body: WHILE PARENT_A • condition PARENT_C INICIO body FIN

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54
    TRUE            shift, and go to state 55
    FALSE           shift, and go to state 56

    condition  go to state 61
    value      go to state 58


State 33

   24 statement: ID UNARY • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 62


State 34

   22 statement: ID OP_ASIG • expression PUNTO_COMA

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54

    expression  go to state 63
    value       go to state 64


State 35

   37 relational: OP_MAYOR_IGUAL •

    $default  reduce using rule 37 (relational)


State 36

   36 relational: OP_MAYOR •

    $default  reduce using rule 36 (relational)


State 37

   39 relational: OP_MENOR_IGUAL •

    $default  reduce using rule 39 (relational)


State 38

   38 relational: OP_MENOR •

    $default  reduce using rule 38 (relational)


State 39

   40 relational: OP_DIST •

    $default  reduce using rule 40 (relational)


State 40

   35 relational: OP_IGUAL •

    $default  reduce using rule 35 (relational)


State 41

   23 statement: ID relational • expression PUNTO_COMA

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54

    expression  go to state 65
    value       go to state 64


State 42

   46 return: RETURN • value PUNTO_COMA

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54

    value  go to state 66


State 43

    9 body: body • body
    9     | body body •

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    ID      shift, and go to state 22

    UNARY     [reduce using rule 9 (body)]
    CHAR      [reduce using rule 9 (body)]
    DO        [reduce using rule 9 (body)]
    FLOAT     [reduce using rule 9 (body)]
    FOR       [reduce using rule 9 (body)]
    IF        [reduce using rule 9 (body)]
    INT       [reduce using rule 9 (body)]
    PRINTF    [reduce using rule 9 (body)]
    SCANF     [reduce using rule 9 (body)]
    VOID      [reduce using rule 9 (body)]
    WHILE     [reduce using rule 9 (body)]
    ID        [reduce using rule 9 (body)]
    $default  reduce using rule 9 (body)

    body       go to state 43
    datatype   go to state 24
    statement  go to state 25


State 44

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return • FIN

    FIN  shift, and go to state 67


State 45

   21 statement: datatype ID • init PUNTO_COMA

    OP_ASIG  shift, and go to state 68
    COMA     shift, and go to state 69

    $default  reduce using rule 28 (init)

    init  go to state 70


State 46

    8 body: statement PUNTO_COMA •

    $default  reduce using rule 8 (body)


State 47

   25 statement: UNARY ID PUNTO_COMA •

    $default  reduce using rule 25 (statement)


State 48

    7 body: DO INICIO body • FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA
    9     | body • body

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    FIN     shift, and go to state 71
    ID      shift, and go to state 22

    body       go to state 43
    datatype   go to state 24
    statement  go to state 25


State 49

    5 body: FOR PARENT_A statement • PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN

    PUNTO_COMA  shift, and go to state 72


State 50

   41 value: CHARACTER •

    $default  reduce using rule 41 (value)


State 51

   44 value: STRING •

    $default  reduce using rule 44 (value)


State 52

   42 value: FLOAT_NUMBER •

    $default  reduce using rule 42 (value)


State 53

   43 value: INTEGER_NUMBER •

    $default  reduce using rule 43 (value)


State 54

   45 value: ID •

    $default  reduce using rule 45 (value)


State 55

   19 condition: TRUE •

    $default  reduce using rule 19 (condition)


State 56

   20 condition: FALSE •

    $default  reduce using rule 20 (condition)


State 57

    4 body: IF PARENT_A condition • PARENT_C INICIO body FIN else

    PARENT_C  shift, and go to state 73


State 58

   18 condition: value • relational value

    OP_MAYOR_IGUAL  shift, and go to state 35
    OP_MAYOR        shift, and go to state 36
    OP_MENOR_IGUAL  shift, and go to state 37
    OP_MENOR        shift, and go to state 38
    OP_DIST         shift, and go to state 39
    OP_IGUAL        shift, and go to state 40

    relational  go to state 74


State 59

   10 body: PRINTF PARENT_A STRING • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 75


State 60

   11 body: SCANF PARENT_A STRING • COMA '&' ID PARENT_C PUNTO_COMA

    COMA  shift, and go to state 76


State 61

    6 body: WHILE PARENT_A condition • PARENT_C INICIO body FIN

    PARENT_C  shift, and go to state 77


State 62

   24 statement: ID UNARY PUNTO_COMA •

    $default  reduce using rule 24 (statement)


State 63

   22 statement: ID OP_ASIG expression • PUNTO_COMA
   29 expression: expression • arithmetics expression

    OP_MULT     shift, and go to state 78
    OP_SUMA     shift, and go to state 79
    OP_SUS      shift, and go to state 80
    OP_DIV      shift, and go to state 81
    PUNTO_COMA  shift, and go to state 82

    arithmetics  go to state 83


State 64

   30 expression: value •

    $default  reduce using rule 30 (expression)


State 65

   23 statement: ID relational expression • PUNTO_COMA
   29 expression: expression • arithmetics expression

    OP_MULT     shift, and go to state 78
    OP_SUMA     shift, and go to state 79
    OP_SUS      shift, and go to state 80
    OP_DIV      shift, and go to state 81
    PUNTO_COMA  shift, and go to state 84

    arithmetics  go to state 83


State 66

   46 return: RETURN value • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 85


State 67

    1 program: headers datatype MAIN PARENT_A PARENT_C INICIO body return FIN •

    $default  reduce using rule 1 (program)


State 68

   26 init: OP_ASIG • value

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54

    value  go to state 86


State 69

   27 init: COMA • ID init

    ID  shift, and go to state 87


State 70

   21 statement: datatype ID init • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 88


State 71

    7 body: DO INICIO body FIN • WHILE PARENT_A condition PARENT_C PUNTO_COMA

    WHILE  shift, and go to state 89


State 72

    5 body: FOR PARENT_A statement PUNTO_COMA • condition PUNTO_COMA statement PARENT_C INICIO body FIN

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54
    TRUE            shift, and go to state 55
    FALSE           shift, and go to state 56

    condition  go to state 90
    value      go to state 58


State 73

    4 body: IF PARENT_A condition PARENT_C • INICIO body FIN else

    INICIO  shift, and go to state 91


State 74

   18 condition: value relational • value

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54

    value  go to state 92


State 75

   10 body: PRINTF PARENT_A STRING PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 93


State 76

   11 body: SCANF PARENT_A STRING COMA • '&' ID PARENT_C PUNTO_COMA

    '&'  shift, and go to state 94


State 77

    6 body: WHILE PARENT_A condition PARENT_C • INICIO body FIN

    INICIO  shift, and go to state 95


State 78

   34 arithmetics: OP_MULT •

    $default  reduce using rule 34 (arithmetics)


State 79

   31 arithmetics: OP_SUMA •

    $default  reduce using rule 31 (arithmetics)


State 80

   32 arithmetics: OP_SUS •

    $default  reduce using rule 32 (arithmetics)


State 81

   33 arithmetics: OP_DIV •

    $default  reduce using rule 33 (arithmetics)


State 82

   22 statement: ID OP_ASIG expression PUNTO_COMA •

    $default  reduce using rule 22 (statement)


State 83

   29 expression: expression arithmetics • expression

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54

    expression  go to state 96
    value       go to state 64


State 84

   23 statement: ID relational expression PUNTO_COMA •

    $default  reduce using rule 23 (statement)


State 85

   46 return: RETURN value PUNTO_COMA •

    $default  reduce using rule 46 (return)


State 86

   26 init: OP_ASIG value •

    $default  reduce using rule 26 (init)


State 87

   27 init: COMA ID • init

    OP_ASIG  shift, and go to state 68
    COMA     shift, and go to state 69

    $default  reduce using rule 28 (init)

    init  go to state 97


State 88

   21 statement: datatype ID init PUNTO_COMA •

    $default  reduce using rule 21 (statement)


State 89

    7 body: DO INICIO body FIN WHILE • PARENT_A condition PARENT_C PUNTO_COMA

    PARENT_A  shift, and go to state 98


State 90

    5 body: FOR PARENT_A statement PUNTO_COMA condition • PUNTO_COMA statement PARENT_C INICIO body FIN

    PUNTO_COMA  shift, and go to state 99


State 91

    4 body: IF PARENT_A condition PARENT_C INICIO • body FIN else

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    ID      shift, and go to state 22

    body       go to state 100
    datatype   go to state 24
    statement  go to state 25


State 92

   18 condition: value relational value •

    $default  reduce using rule 18 (condition)


State 93

   10 body: PRINTF PARENT_A STRING PARENT_C PUNTO_COMA •

    $default  reduce using rule 10 (body)


State 94

   11 body: SCANF PARENT_A STRING COMA '&' • ID PARENT_C PUNTO_COMA

    ID  shift, and go to state 101


State 95

    6 body: WHILE PARENT_A condition PARENT_C INICIO • body FIN

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    ID      shift, and go to state 22

    body       go to state 102
    datatype   go to state 24
    statement  go to state 25


State 96

   29 expression: expression • arithmetics expression
   29           | expression arithmetics expression •

    OP_MULT  shift, and go to state 78
    OP_SUMA  shift, and go to state 79
    OP_SUS   shift, and go to state 80
    OP_DIV   shift, and go to state 81

    OP_MULT   [reduce using rule 29 (expression)]
    OP_SUMA   [reduce using rule 29 (expression)]
    OP_SUS    [reduce using rule 29 (expression)]
    OP_DIV    [reduce using rule 29 (expression)]
    $default  reduce using rule 29 (expression)

    arithmetics  go to state 83


State 97

   27 init: COMA ID init •

    $default  reduce using rule 27 (init)


State 98

    7 body: DO INICIO body FIN WHILE PARENT_A • condition PARENT_C PUNTO_COMA

    CHARACTER       shift, and go to state 50
    STRING          shift, and go to state 51
    FLOAT_NUMBER    shift, and go to state 52
    INTEGER_NUMBER  shift, and go to state 53
    ID              shift, and go to state 54
    TRUE            shift, and go to state 55
    FALSE           shift, and go to state 56

    condition  go to state 103
    value      go to state 58


State 99

    5 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA • statement PARENT_C INICIO body FIN

    UNARY  shift, and go to state 15
    CHAR   shift, and go to state 5
    FLOAT  shift, and go to state 6
    INT    shift, and go to state 7
    VOID   shift, and go to state 8
    ID     shift, and go to state 22

    datatype   go to state 24
    statement  go to state 104


State 100

    4 body: IF PARENT_A condition PARENT_C INICIO body • FIN else
    9     | body • body

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    FIN     shift, and go to state 105
    ID      shift, and go to state 22

    body       go to state 43
    datatype   go to state 24
    statement  go to state 25


State 101

   11 body: SCANF PARENT_A STRING COMA '&' ID • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 106


State 102

    6 body: WHILE PARENT_A condition PARENT_C INICIO body • FIN
    9     | body • body

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    FIN     shift, and go to state 107
    ID      shift, and go to state 22

    body       go to state 43
    datatype   go to state 24
    statement  go to state 25


State 103

    7 body: DO INICIO body FIN WHILE PARENT_A condition • PARENT_C PUNTO_COMA

    PARENT_C  shift, and go to state 108


State 104

    5 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement • PARENT_C INICIO body FIN

    PARENT_C  shift, and go to state 109


State 105

    4 body: IF PARENT_A condition PARENT_C INICIO body FIN • else

    ELSE  shift, and go to state 110

    $default  reduce using rule 13 (else)

    else  go to state 111


State 106

   11 body: SCANF PARENT_A STRING COMA '&' ID PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 112


State 107

    6 body: WHILE PARENT_A condition PARENT_C INICIO body FIN •

    $default  reduce using rule 6 (body)


State 108

    7 body: DO INICIO body FIN WHILE PARENT_A condition PARENT_C • PUNTO_COMA

    PUNTO_COMA  shift, and go to state 113


State 109

    5 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C • INICIO body FIN

    INICIO  shift, and go to state 114


State 110

   12 else: ELSE • INICIO body FIN

    INICIO  shift, and go to state 115


State 111

    4 body: IF PARENT_A condition PARENT_C INICIO body FIN else •

    $default  reduce using rule 4 (body)


State 112

   11 body: SCANF PARENT_A STRING COMA '&' ID PARENT_C PUNTO_COMA •

    $default  reduce using rule 11 (body)


State 113

    7 body: DO INICIO body FIN WHILE PARENT_A condition PARENT_C PUNTO_COMA •

    $default  reduce using rule 7 (body)


State 114

    5 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO • body FIN

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    ID      shift, and go to state 22

    body       go to state 116
    datatype   go to state 24
    statement  go to state 25


State 115

   12 else: ELSE INICIO • body FIN

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    ID      shift, and go to state 22

    body       go to state 117
    datatype   go to state 24
    statement  go to state 25


State 116

    5 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body • FIN
    9     | body • body

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    FIN     shift, and go to state 118
    ID      shift, and go to state 22

    body       go to state 43
    datatype   go to state 24
    statement  go to state 25


State 117

    9 body: body • body
   12 else: ELSE INICIO body • FIN

    UNARY   shift, and go to state 15
    CHAR    shift, and go to state 5
    DO      shift, and go to state 16
    FLOAT   shift, and go to state 6
    FOR     shift, and go to state 17
    IF      shift, and go to state 18
    INT     shift, and go to state 7
    PRINTF  shift, and go to state 19
    SCANF   shift, and go to state 20
    VOID    shift, and go to state 8
    WHILE   shift, and go to state 21
    FIN     shift, and go to state 119
    ID      shift, and go to state 22

    body       go to state 43
    datatype   go to state 24
    statement  go to state 25


State 118

    5 body: FOR PARENT_A statement PUNTO_COMA condition PUNTO_COMA statement PARENT_C INICIO body FIN •

    $default  reduce using rule 5 (body)


State 119

   12 else: ELSE INICIO body FIN •

    $default  reduce using rule 12 (else)
